/* GLD file for PIC24 application using the Bully bootloader. */
/*
 * Linker script for PIC33EP32GS202
 * (c) Copyright 2013 Microchip Technology, Inc
 * Part support version 1.30.A(22-Nov-2016)
 *
 * This software is developed by Microchip Technology Inc. and its
 * subsidiaries ("Microchip").
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are 
 * met:
 * 
 * 1.      Redistributions of source code must retain the above copyright
 *         notice, this list of conditions and the following disclaimer.
 * 2.      Redistributions in binary form must reproduce the above 
 *         copyright notice, this list of conditions and the following 
 *         disclaimer in the documentation and/or other materials provided 
 *         with the distribution.
 * 3.      Microchip's name may not be used to endorse or promote products
 *         derived from this software without specific prior written 
 *         permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR PURPOSE ARE DISCLAIMED. IN NO EVENT 
 * SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR 
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 */


OUTPUT_ARCH("33EP32GS202")
CRT0_STARTUP(crt0_extendedep.o)
CRT1_STARTUP(crt1_extendedep.o)
#if __XC16_VERSION__ > 1027
/*
 * Define how to startup, by default we initialize
 * everything as normal; change to crt_start_mode to
 * preserve preserved data on a restart
 *
 * Or define your own __crt_start_mode fucntion
 */
CRT_STARTMODE(crt_start_mode_normal)
#endif

OPTIONAL(-lp33EP32GS202)
OPTIONAL(-lfx)

/*
** Memory Regions
*/
MEMORY
{
  data  (a!xr)   : ORIGIN = 0x1000,        LENGTH = 0x800
  reset          : ORIGIN = 0x0,           LENGTH = 0x4
  ivt            : ORIGIN = 0x4,           LENGTH = 0x1FC
  j_ivt          : ORIGIN = 0x1000,          LENGTH = 0x300
  program (xr)   : ORIGIN = 0x1300,         LENGTH = 0x4480
  FSEC           : ORIGIN = 0x5780,        LENGTH = 0x2
  FBSLIM         : ORIGIN = 0x5790,        LENGTH = 0x2
  FOSCSEL        : ORIGIN = 0x5798,        LENGTH = 0x2
  FOSC           : ORIGIN = 0x579C,        LENGTH = 0x2
  FWDT           : ORIGIN = 0x57A0,        LENGTH = 0x2
  FPOR           : ORIGIN = 0x57A4,        LENGTH = 0x2
  FICD           : ORIGIN = 0x57A8,        LENGTH = 0x2
  FDEVOPT        : ORIGIN = 0x57AC,        LENGTH = 0x2
  FALTREG        : ORIGIN = 0x57B0,        LENGTH = 0x2
}
__JIVT_BASE          = 0x1000;
J__OscillatorFail = 0x1002;
J__AddressError = 0x1006;
J__HardTrapError = 0x100a;
J__StackError = 0x100e;
J__MathError = 0x1012;
J__ReservedTrap5 = 0x1016;
J__SoftTrapError = 0x101a;
J__ReservedTrap7 = 0x101e;
J__INT0Interrupt = 0x1022;
J__IC1Interrupt = 0x1026;
J__OC1Interrupt = 0x102a;
J__T1Interrupt = 0x102e;
J__Interrupt4 = 0x1032;
J__Interrupt5 = 0x1036;
J__Interrupt6 = 0x103a;
J__T2Interrupt = 0x103e;
J__T3Interrupt = 0x1042;
J__SPI1ErrInterrupt = 0x1046;
J__SPI1Interrupt = 0x104a;
J__U1RXInterrupt = 0x104e;
J__U1TXInterrupt = 0x1052;
J__AD1Interrupt = 0x1056;
J__Interrupt14 = 0x105a;
J__NVMInterrupt = 0x105e;
J__SI2C1Interrupt = 0x1062;
J__MI2C1Interrupt = 0x1066;
J__CMP1Interrupt = 0x106a;
J__CNInterrupt = 0x106e;
J__INT1Interrupt = 0x1072;
J__Interrupt21 = 0x1076;
J__Interrupt22 = 0x107a;
J__Interrupt23 = 0x107e;
J__Interrupt24 = 0x1082;
J__Interrupt25 = 0x1086;
J__Interrupt26 = 0x108a;
J__Interrupt27 = 0x108e;
J__Interrupt28 = 0x1092;
J__INT2Interrupt = 0x1096;
J__Interrupt30 = 0x109a;
J__Interrupt31 = 0x109e;
J__Interrupt32 = 0x10a2;
J__Interrupt33 = 0x10a6;
J__Interrupt34 = 0x10aa;
J__Interrupt35 = 0x10ae;
J__Interrupt36 = 0x10b2;
J__Interrupt37 = 0x10b6;
J__Interrupt38 = 0x10ba;
J__Interrupt39 = 0x10be;
J__Interrupt40 = 0x10c2;
J__Interrupt41 = 0x10c6;
J__Interrupt42 = 0x10ca;
J__Interrupt43 = 0x10ce;
J__Interrupt44 = 0x10d2;
J__Interrupt45 = 0x10d6;
J__Interrupt46 = 0x10da;
J__Interrupt47 = 0x10de;
J__Interrupt48 = 0x10e2;
J__Interrupt49 = 0x10e6;
J__Interrupt50 = 0x10ea;
J__Interrupt51 = 0x10ee;
J__Interrupt52 = 0x10f2;
J__Interrupt53 = 0x10f6;
J__Interrupt54 = 0x10fa;
J__Interrupt55 = 0x10fe;
J__Interrupt56 = 0x1102;
J__PWMSpEventMatchInterrupt = 0x1106;
J__Interrupt58 = 0x110a;
J__Interrupt59 = 0x110e;
J__Interrupt60 = 0x1112;
J__Interrupt61 = 0x1116;
J__Interrupt62 = 0x111a;
J__Interrupt63 = 0x111e;
J__Interrupt64 = 0x1122;
J__U1ErrInterrupt = 0x1126;
J__Interrupt66 = 0x112a;
J__Interrupt67 = 0x112e;
J__Interrupt68 = 0x1132;
J__Interrupt69 = 0x1136;
J__Interrupt70 = 0x113a;
J__Interrupt71 = 0x113e;
J__Interrupt72 = 0x1142;
J__PWMSecSpEventMatchInterrupt = 0x1146;
J__Interrupt74 = 0x114a;
J__Interrupt75 = 0x114e;
J__Interrupt76 = 0x1152;
J__Interrupt77 = 0x1156;
J__Interrupt78 = 0x115a;
J__Interrupt79 = 0x115e;
J__Interrupt80 = 0x1162;
J__Interrupt81 = 0x1166;
J__Interrupt82 = 0x116a;
J__Interrupt83 = 0x116e;
J__Interrupt84 = 0x1172;
J__Interrupt85 = 0x1176;
J__Interrupt86 = 0x117a;
J__Interrupt87 = 0x117e;
J__Interrupt88 = 0x1182;
J__Interrupt89 = 0x1186;
J__Interrupt90 = 0x118a;
J__Interrupt91 = 0x118e;
J__Interrupt92 = 0x1192;
J__Interrupt93 = 0x1196;
J__PWM1Interrupt = 0x119a;
J__PWM2Interrupt = 0x119e;
J__PWM3Interrupt = 0x11a2;
J__Interrupt97 = 0x11a6;
J__Interrupt98 = 0x11aa;
J__Interrupt99 = 0x11ae;
J__Interrupt100 = 0x11b2;
J__Interrupt101 = 0x11b6;
J__Interrupt102 = 0x11ba;
J__CMP2Interrupt = 0x11be;
J__Interrupt104 = 0x11c2;
J__Interrupt105 = 0x11c6;
J__Interrupt106 = 0x11ca;
J__Interrupt107 = 0x11ce;
J__Interrupt108 = 0x11d2;
J__Interrupt109 = 0x11d6;
J__ADCAN0Interrupt = 0x11da;
J__ADCAN1Interrupt = 0x11de;
J__ADCAN2Interrupt = 0x11e2;
J__ADCAN3Interrupt = 0x11e6;
J__ADCAN4Interrupt = 0x11ea;
J__ADCAN5Interrupt = 0x11ee;
J__ADCAN6Interrupt = 0x11f2;
J__ADCAN7Interrupt = 0x11f6;
J__Interrupt118 = 0x11fa;
J__Interrupt119 = 0x11fe;
J__Interrupt120 = 0x1202;
J__Interrupt121 = 0x1206;
J__Interrupt122 = 0x120a;
J__Interrupt123 = 0x120e;
J__Interrupt124 = 0x1212;
J__Interrupt125 = 0x1216;
J__Interrupt126 = 0x121a;
J__Interrupt127 = 0x121e;
J__Interrupt128 = 0x1222;
J__Interrupt129 = 0x1226;
J__Interrupt130 = 0x122a;
J__Interrupt131 = 0x122e;
J__Interrupt132 = 0x1232;
J__Interrupt133 = 0x1236;
J__Interrupt134 = 0x123a;
J__Interrupt135 = 0x123e;
J__Interrupt136 = 0x1242;
J__Interrupt137 = 0x1246;
J__Interrupt138 = 0x124a;
J__Interrupt139 = 0x124e;
J__Interrupt140 = 0x1252;
J__Interrupt141 = 0x1256;
J__ICDInterrupt = 0x125a;
J__JTAGInterrupt = 0x125e;
J__Interrupt144 = 0x1262;
J__Interrupt145 = 0x1266;
J__Interrupt146 = 0x126a;
J__Interrupt147 = 0x126e;
J__Interrupt148 = 0x1272;
J__Interrupt149 = 0x1276;
J__Interrupt150 = 0x127a;
J__ADCAN8Interrupt = 0x127e;
J__ADCAN9Interrupt = 0x1282;
J__ADCAN10Interrupt = 0x1286;
J__ADCAN11Interrupt = 0x128a;
J__ADCAN12Interrupt = 0x128e;
J__ADCAN13Interrupt = 0x1292;
J__ADCAN14Interrupt = 0x1296;
J__Interrupt158 = 0x129a;
J__Interrupt159 = 0x129e;
J__Interrupt160 = 0x12a2;
J__Interrupt161 = 0x12a6;
J__Interrupt162 = 0x12aa;
J__Interrupt163 = 0x12ae;
J__Interrupt164 = 0x12b2;
J__Interrupt165 = 0x12b6;
J__Interrupt166 = 0x12ba;
J__Interrupt167 = 0x12be;
J__Interrupt168 = 0x12c2;
J__Interrupt169 = 0x12c6;
J__Interrupt170 = 0x12ca;
J__Interrupt171 = 0x12ce;
J__Interrupt172 = 0x12d2;
J__I2C1BCInterrupt = 0x12d6;
J__Interrupt174 = 0x12da;
J__Interrupt175 = 0x12de;
J__Interrupt176 = 0x12e2;
J__ADCMP0Interrupt = 0x12e6;
J__ADCMP1Interrupt = 0x12ea;
J__ADFL0Interrupt = 0x12ee;

__FSEC = 0x5780;
__FBSLIM = 0x5790;
__FOSCSEL = 0x5798;
__FOSC = 0x579C;
__FWDT = 0x57A0;
__FPOR = 0x57A4;
__FICD = 0x57A8;
__FDEVOPT = 0x57AC;
__FALTREG = 0x57B0;
__NO_HANDLES = 1;          /* Suppress handles on this device  */
__CODE_BASE = 0x200;
__CODE_LENGTH = 0x5580;
__IVT_BASE  = 0x4;

__DATA_BASE = 0x1000;
__DATA_LENGTH = 0x800;
__YDATA_BASE = 0x1400;


/*
** ==================== Section Map ======================
*/
SECTIONS
{
  /*
  ** ========== Program Memory ==========
  */


#if !defined(__CORESIDENT) || defined(__DEFINE_RESET)
  /*
  ** Reset Instruction
  */
  .reset :
  {
        SHORT(ABSOLUTE(__reset));
        SHORT(0x04);
        SHORT((ABSOLUTE(__reset) >> 16) & 0x7F);
        SHORT(0);
  } >reset
#endif


  /*
  ** Interrupt Vector Tables
  **
  ** The primary and alternate tables are loaded
  ** here, between sections .reset and .text.
  ** Vector table source code appears below.
  */
.j_ivt __JIVT_BASE :
 {
 SHORT(0x02);  /* timeout value */
 SHORT(0x00);
    SHORT(DEFINED(__OscillatorFail) ? ABSOLUTE(__OscillatorFail) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OscillatorFail) ? ABSOLUTE(__OscillatorFail) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__AddressError) ? ABSOLUTE(__AddressError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__AddressError) ? ABSOLUTE(__AddressError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__HardTrapError) ? ABSOLUTE(__HardTrapError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__HardTrapError) ? ABSOLUTE(__HardTrapError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__StackError) ? ABSOLUTE(__StackError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__StackError) ? ABSOLUTE(__StackError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__MathError) ? ABSOLUTE(__MathError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__MathError) ? ABSOLUTE(__MathError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ReservedTrap5) ? ABSOLUTE(__ReservedTrap5) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap5) ? ABSOLUTE(__ReservedTrap5) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SoftTrapError) ? ABSOLUTE(__SoftTrapError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SoftTrapError) ? ABSOLUTE(__SoftTrapError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ReservedTrap7) ? ABSOLUTE(__ReservedTrap7) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap7) ? ABSOLUTE(__ReservedTrap7) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT0Interrupt) ? ABSOLUTE(__INT0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT0Interrupt) ? ABSOLUTE(__INT0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC1Interrupt) ? ABSOLUTE(__IC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC1Interrupt) ? ABSOLUTE(__IC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC1Interrupt) ? ABSOLUTE(__OC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC1Interrupt) ? ABSOLUTE(__OC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T1Interrupt) ? ABSOLUTE(__T1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T1Interrupt) ? ABSOLUTE(__T1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt4) ? ABSOLUTE(__Interrupt4) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt4) ? ABSOLUTE(__Interrupt4) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt5) ? ABSOLUTE(__Interrupt5) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt5) ? ABSOLUTE(__Interrupt5) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt6) ? ABSOLUTE(__Interrupt6) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt6) ? ABSOLUTE(__Interrupt6) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T2Interrupt) ? ABSOLUTE(__T2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T2Interrupt) ? ABSOLUTE(__T2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T3Interrupt) ? ABSOLUTE(__T3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T3Interrupt) ? ABSOLUTE(__T3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI1ErrInterrupt) ? ABSOLUTE(__SPI1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI1ErrInterrupt) ? ABSOLUTE(__SPI1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI1Interrupt) ? ABSOLUTE(__SPI1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI1Interrupt) ? ABSOLUTE(__SPI1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1RXInterrupt) ? ABSOLUTE(__U1RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1RXInterrupt) ? ABSOLUTE(__U1RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1TXInterrupt) ? ABSOLUTE(__U1TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1TXInterrupt) ? ABSOLUTE(__U1TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__AD1Interrupt) ? ABSOLUTE(__AD1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__AD1Interrupt) ? ABSOLUTE(__AD1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt14) ? ABSOLUTE(__Interrupt14) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt14) ? ABSOLUTE(__Interrupt14) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__NVMInterrupt) ? ABSOLUTE(__NVMInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__NVMInterrupt) ? ABSOLUTE(__NVMInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SI2C1Interrupt) ? ABSOLUTE(__SI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SI2C1Interrupt) ? ABSOLUTE(__SI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__MI2C1Interrupt) ? ABSOLUTE(__MI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__MI2C1Interrupt) ? ABSOLUTE(__MI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CMP1Interrupt) ? ABSOLUTE(__CMP1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CMP1Interrupt) ? ABSOLUTE(__CMP1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CNInterrupt) ? ABSOLUTE(__CNInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CNInterrupt) ? ABSOLUTE(__CNInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT1Interrupt) ? ABSOLUTE(__INT1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT1Interrupt) ? ABSOLUTE(__INT1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt21) ? ABSOLUTE(__Interrupt21) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt21) ? ABSOLUTE(__Interrupt21) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt22) ? ABSOLUTE(__Interrupt22) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt22) ? ABSOLUTE(__Interrupt22) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt23) ? ABSOLUTE(__Interrupt23) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt23) ? ABSOLUTE(__Interrupt23) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt24) ? ABSOLUTE(__Interrupt24) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt24) ? ABSOLUTE(__Interrupt24) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt25) ? ABSOLUTE(__Interrupt25) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt25) ? ABSOLUTE(__Interrupt25) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt26) ? ABSOLUTE(__Interrupt26) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt26) ? ABSOLUTE(__Interrupt26) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt27) ? ABSOLUTE(__Interrupt27) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt27) ? ABSOLUTE(__Interrupt27) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt28) ? ABSOLUTE(__Interrupt28) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt28) ? ABSOLUTE(__Interrupt28) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT2Interrupt) ? ABSOLUTE(__INT2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT2Interrupt) ? ABSOLUTE(__INT2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt30) ? ABSOLUTE(__Interrupt30) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt30) ? ABSOLUTE(__Interrupt30) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt31) ? ABSOLUTE(__Interrupt31) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt31) ? ABSOLUTE(__Interrupt31) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt32) ? ABSOLUTE(__Interrupt32) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt32) ? ABSOLUTE(__Interrupt32) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt33) ? ABSOLUTE(__Interrupt33) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt33) ? ABSOLUTE(__Interrupt33) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt34) ? ABSOLUTE(__Interrupt34) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt34) ? ABSOLUTE(__Interrupt34) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt35) ? ABSOLUTE(__Interrupt35) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt35) ? ABSOLUTE(__Interrupt35) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt36) ? ABSOLUTE(__Interrupt36) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt36) ? ABSOLUTE(__Interrupt36) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt37) ? ABSOLUTE(__Interrupt37) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt37) ? ABSOLUTE(__Interrupt37) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt38) ? ABSOLUTE(__Interrupt38) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt38) ? ABSOLUTE(__Interrupt38) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt39) ? ABSOLUTE(__Interrupt39) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt39) ? ABSOLUTE(__Interrupt39) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt40) ? ABSOLUTE(__Interrupt40) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt40) ? ABSOLUTE(__Interrupt40) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt41) ? ABSOLUTE(__Interrupt41) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt41) ? ABSOLUTE(__Interrupt41) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt42) ? ABSOLUTE(__Interrupt42) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt42) ? ABSOLUTE(__Interrupt42) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt43) ? ABSOLUTE(__Interrupt43) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt43) ? ABSOLUTE(__Interrupt43) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt44) ? ABSOLUTE(__Interrupt44) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt44) ? ABSOLUTE(__Interrupt44) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt45) ? ABSOLUTE(__Interrupt45) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt45) ? ABSOLUTE(__Interrupt45) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt46) ? ABSOLUTE(__Interrupt46) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt46) ? ABSOLUTE(__Interrupt46) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt47) ? ABSOLUTE(__Interrupt47) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt47) ? ABSOLUTE(__Interrupt47) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt48) ? ABSOLUTE(__Interrupt48) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt48) ? ABSOLUTE(__Interrupt48) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt49) ? ABSOLUTE(__Interrupt49) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt49) ? ABSOLUTE(__Interrupt49) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt50) ? ABSOLUTE(__Interrupt50) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt50) ? ABSOLUTE(__Interrupt50) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt51) ? ABSOLUTE(__Interrupt51) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt51) ? ABSOLUTE(__Interrupt51) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt52) ? ABSOLUTE(__Interrupt52) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt52) ? ABSOLUTE(__Interrupt52) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt53) ? ABSOLUTE(__Interrupt53) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt53) ? ABSOLUTE(__Interrupt53) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt54) ? ABSOLUTE(__Interrupt54) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt54) ? ABSOLUTE(__Interrupt54) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt55) ? ABSOLUTE(__Interrupt55) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt55) ? ABSOLUTE(__Interrupt55) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt56) ? ABSOLUTE(__Interrupt56) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt56) ? ABSOLUTE(__Interrupt56) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PWMSpEventMatchInterrupt) ? ABSOLUTE(__PWMSpEventMatchInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PWMSpEventMatchInterrupt) ? ABSOLUTE(__PWMSpEventMatchInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt58) ? ABSOLUTE(__Interrupt58) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt58) ? ABSOLUTE(__Interrupt58) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt59) ? ABSOLUTE(__Interrupt59) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt59) ? ABSOLUTE(__Interrupt59) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt60) ? ABSOLUTE(__Interrupt60) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt60) ? ABSOLUTE(__Interrupt60) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt61) ? ABSOLUTE(__Interrupt61) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt61) ? ABSOLUTE(__Interrupt61) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt62) ? ABSOLUTE(__Interrupt62) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt62) ? ABSOLUTE(__Interrupt62) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt63) ? ABSOLUTE(__Interrupt63) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt63) ? ABSOLUTE(__Interrupt63) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt64) ? ABSOLUTE(__Interrupt64) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt64) ? ABSOLUTE(__Interrupt64) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1ErrInterrupt) ? ABSOLUTE(__U1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1ErrInterrupt) ? ABSOLUTE(__U1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt66) ? ABSOLUTE(__Interrupt66) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt66) ? ABSOLUTE(__Interrupt66) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt67) ? ABSOLUTE(__Interrupt67) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt67) ? ABSOLUTE(__Interrupt67) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt68) ? ABSOLUTE(__Interrupt68) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt68) ? ABSOLUTE(__Interrupt68) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt69) ? ABSOLUTE(__Interrupt69) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt69) ? ABSOLUTE(__Interrupt69) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt70) ? ABSOLUTE(__Interrupt70) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt70) ? ABSOLUTE(__Interrupt70) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt71) ? ABSOLUTE(__Interrupt71) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt71) ? ABSOLUTE(__Interrupt71) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt72) ? ABSOLUTE(__Interrupt72) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt72) ? ABSOLUTE(__Interrupt72) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PWMSecSpEventMatchInterrupt) ? ABSOLUTE(__PWMSecSpEventMatchInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PWMSecSpEventMatchInterrupt) ? ABSOLUTE(__PWMSecSpEventMatchInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt74) ? ABSOLUTE(__Interrupt74) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt74) ? ABSOLUTE(__Interrupt74) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt75) ? ABSOLUTE(__Interrupt75) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt75) ? ABSOLUTE(__Interrupt75) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt76) ? ABSOLUTE(__Interrupt76) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt76) ? ABSOLUTE(__Interrupt76) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt77) ? ABSOLUTE(__Interrupt77) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt77) ? ABSOLUTE(__Interrupt77) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt78) ? ABSOLUTE(__Interrupt78) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt78) ? ABSOLUTE(__Interrupt78) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt79) ? ABSOLUTE(__Interrupt79) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt79) ? ABSOLUTE(__Interrupt79) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt80) ? ABSOLUTE(__Interrupt80) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt80) ? ABSOLUTE(__Interrupt80) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt81) ? ABSOLUTE(__Interrupt81) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt81) ? ABSOLUTE(__Interrupt81) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt82) ? ABSOLUTE(__Interrupt82) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt82) ? ABSOLUTE(__Interrupt82) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt83) ? ABSOLUTE(__Interrupt83) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt83) ? ABSOLUTE(__Interrupt83) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt84) ? ABSOLUTE(__Interrupt84) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt84) ? ABSOLUTE(__Interrupt84) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt85) ? ABSOLUTE(__Interrupt85) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt85) ? ABSOLUTE(__Interrupt85) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt86) ? ABSOLUTE(__Interrupt86) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt86) ? ABSOLUTE(__Interrupt86) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt87) ? ABSOLUTE(__Interrupt87) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt87) ? ABSOLUTE(__Interrupt87) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt88) ? ABSOLUTE(__Interrupt88) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt88) ? ABSOLUTE(__Interrupt88) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt89) ? ABSOLUTE(__Interrupt89) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt89) ? ABSOLUTE(__Interrupt89) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt90) ? ABSOLUTE(__Interrupt90) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt90) ? ABSOLUTE(__Interrupt90) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt91) ? ABSOLUTE(__Interrupt91) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt91) ? ABSOLUTE(__Interrupt91) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt92) ? ABSOLUTE(__Interrupt92) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt92) ? ABSOLUTE(__Interrupt92) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt93) ? ABSOLUTE(__Interrupt93) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt93) ? ABSOLUTE(__Interrupt93) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PWM1Interrupt) ? ABSOLUTE(__PWM1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PWM1Interrupt) ? ABSOLUTE(__PWM1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PWM2Interrupt) ? ABSOLUTE(__PWM2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PWM2Interrupt) ? ABSOLUTE(__PWM2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PWM3Interrupt) ? ABSOLUTE(__PWM3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PWM3Interrupt) ? ABSOLUTE(__PWM3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt97) ? ABSOLUTE(__Interrupt97) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt97) ? ABSOLUTE(__Interrupt97) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt98) ? ABSOLUTE(__Interrupt98) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt98) ? ABSOLUTE(__Interrupt98) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt99) ? ABSOLUTE(__Interrupt99) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt99) ? ABSOLUTE(__Interrupt99) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt100) ? ABSOLUTE(__Interrupt100) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt100) ? ABSOLUTE(__Interrupt100) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt101) ? ABSOLUTE(__Interrupt101) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt101) ? ABSOLUTE(__Interrupt101) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt102) ? ABSOLUTE(__Interrupt102) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt102) ? ABSOLUTE(__Interrupt102) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CMP2Interrupt) ? ABSOLUTE(__CMP2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CMP2Interrupt) ? ABSOLUTE(__CMP2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt104) ? ABSOLUTE(__Interrupt104) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt104) ? ABSOLUTE(__Interrupt104) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt105) ? ABSOLUTE(__Interrupt105) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt105) ? ABSOLUTE(__Interrupt105) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt106) ? ABSOLUTE(__Interrupt106) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt106) ? ABSOLUTE(__Interrupt106) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt107) ? ABSOLUTE(__Interrupt107) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt107) ? ABSOLUTE(__Interrupt107) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt108) ? ABSOLUTE(__Interrupt108) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt108) ? ABSOLUTE(__Interrupt108) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt109) ? ABSOLUTE(__Interrupt109) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt109) ? ABSOLUTE(__Interrupt109) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN0Interrupt) ? ABSOLUTE(__ADCAN0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN0Interrupt) ? ABSOLUTE(__ADCAN0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN1Interrupt) ? ABSOLUTE(__ADCAN1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN1Interrupt) ? ABSOLUTE(__ADCAN1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN2Interrupt) ? ABSOLUTE(__ADCAN2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN2Interrupt) ? ABSOLUTE(__ADCAN2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN3Interrupt) ? ABSOLUTE(__ADCAN3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN3Interrupt) ? ABSOLUTE(__ADCAN3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN4Interrupt) ? ABSOLUTE(__ADCAN4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN4Interrupt) ? ABSOLUTE(__ADCAN4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN5Interrupt) ? ABSOLUTE(__ADCAN5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN5Interrupt) ? ABSOLUTE(__ADCAN5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN6Interrupt) ? ABSOLUTE(__ADCAN6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN6Interrupt) ? ABSOLUTE(__ADCAN6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN7Interrupt) ? ABSOLUTE(__ADCAN7Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN7Interrupt) ? ABSOLUTE(__ADCAN7Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt118) ? ABSOLUTE(__Interrupt118) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt118) ? ABSOLUTE(__Interrupt118) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt119) ? ABSOLUTE(__Interrupt119) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt119) ? ABSOLUTE(__Interrupt119) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt120) ? ABSOLUTE(__Interrupt120) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt120) ? ABSOLUTE(__Interrupt120) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt121) ? ABSOLUTE(__Interrupt121) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt121) ? ABSOLUTE(__Interrupt121) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt122) ? ABSOLUTE(__Interrupt122) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt122) ? ABSOLUTE(__Interrupt122) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt123) ? ABSOLUTE(__Interrupt123) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt123) ? ABSOLUTE(__Interrupt123) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt124) ? ABSOLUTE(__Interrupt124) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt124) ? ABSOLUTE(__Interrupt124) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt125) ? ABSOLUTE(__Interrupt125) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt125) ? ABSOLUTE(__Interrupt125) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt126) ? ABSOLUTE(__Interrupt126) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt126) ? ABSOLUTE(__Interrupt126) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt127) ? ABSOLUTE(__Interrupt127) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt127) ? ABSOLUTE(__Interrupt127) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt128) ? ABSOLUTE(__Interrupt128) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt128) ? ABSOLUTE(__Interrupt128) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt129) ? ABSOLUTE(__Interrupt129) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt129) ? ABSOLUTE(__Interrupt129) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt130) ? ABSOLUTE(__Interrupt130) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt130) ? ABSOLUTE(__Interrupt130) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt131) ? ABSOLUTE(__Interrupt131) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt131) ? ABSOLUTE(__Interrupt131) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt132) ? ABSOLUTE(__Interrupt132) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt132) ? ABSOLUTE(__Interrupt132) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt133) ? ABSOLUTE(__Interrupt133) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt133) ? ABSOLUTE(__Interrupt133) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt134) ? ABSOLUTE(__Interrupt134) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt134) ? ABSOLUTE(__Interrupt134) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt135) ? ABSOLUTE(__Interrupt135) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt135) ? ABSOLUTE(__Interrupt135) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt136) ? ABSOLUTE(__Interrupt136) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt136) ? ABSOLUTE(__Interrupt136) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt137) ? ABSOLUTE(__Interrupt137) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt137) ? ABSOLUTE(__Interrupt137) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt138) ? ABSOLUTE(__Interrupt138) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt138) ? ABSOLUTE(__Interrupt138) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt139) ? ABSOLUTE(__Interrupt139) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt139) ? ABSOLUTE(__Interrupt139) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt140) ? ABSOLUTE(__Interrupt140) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt140) ? ABSOLUTE(__Interrupt140) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt141) ? ABSOLUTE(__Interrupt141) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt141) ? ABSOLUTE(__Interrupt141) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ICDInterrupt) ? ABSOLUTE(__ICDInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ICDInterrupt) ? ABSOLUTE(__ICDInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__JTAGInterrupt) ? ABSOLUTE(__JTAGInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__JTAGInterrupt) ? ABSOLUTE(__JTAGInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt144) ? ABSOLUTE(__Interrupt144) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt144) ? ABSOLUTE(__Interrupt144) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt145) ? ABSOLUTE(__Interrupt145) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt145) ? ABSOLUTE(__Interrupt145) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt146) ? ABSOLUTE(__Interrupt146) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt146) ? ABSOLUTE(__Interrupt146) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt147) ? ABSOLUTE(__Interrupt147) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt147) ? ABSOLUTE(__Interrupt147) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt148) ? ABSOLUTE(__Interrupt148) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt148) ? ABSOLUTE(__Interrupt148) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt149) ? ABSOLUTE(__Interrupt149) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt149) ? ABSOLUTE(__Interrupt149) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt150) ? ABSOLUTE(__Interrupt150) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt150) ? ABSOLUTE(__Interrupt150) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN8Interrupt) ? ABSOLUTE(__ADCAN8Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN8Interrupt) ? ABSOLUTE(__ADCAN8Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN9Interrupt) ? ABSOLUTE(__ADCAN9Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN9Interrupt) ? ABSOLUTE(__ADCAN9Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN10Interrupt) ? ABSOLUTE(__ADCAN10Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN10Interrupt) ? ABSOLUTE(__ADCAN10Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN11Interrupt) ? ABSOLUTE(__ADCAN11Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN11Interrupt) ? ABSOLUTE(__ADCAN11Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN12Interrupt) ? ABSOLUTE(__ADCAN12Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN12Interrupt) ? ABSOLUTE(__ADCAN12Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN13Interrupt) ? ABSOLUTE(__ADCAN13Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN13Interrupt) ? ABSOLUTE(__ADCAN13Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCAN14Interrupt) ? ABSOLUTE(__ADCAN14Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCAN14Interrupt) ? ABSOLUTE(__ADCAN14Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt158) ? ABSOLUTE(__Interrupt158) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt158) ? ABSOLUTE(__Interrupt158) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt159) ? ABSOLUTE(__Interrupt159) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt159) ? ABSOLUTE(__Interrupt159) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt160) ? ABSOLUTE(__Interrupt160) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt160) ? ABSOLUTE(__Interrupt160) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt161) ? ABSOLUTE(__Interrupt161) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt161) ? ABSOLUTE(__Interrupt161) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt162) ? ABSOLUTE(__Interrupt162) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt162) ? ABSOLUTE(__Interrupt162) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt163) ? ABSOLUTE(__Interrupt163) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt163) ? ABSOLUTE(__Interrupt163) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt164) ? ABSOLUTE(__Interrupt164) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt164) ? ABSOLUTE(__Interrupt164) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt165) ? ABSOLUTE(__Interrupt165) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt165) ? ABSOLUTE(__Interrupt165) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt166) ? ABSOLUTE(__Interrupt166) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt166) ? ABSOLUTE(__Interrupt166) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt167) ? ABSOLUTE(__Interrupt167) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt167) ? ABSOLUTE(__Interrupt167) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt168) ? ABSOLUTE(__Interrupt168) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt168) ? ABSOLUTE(__Interrupt168) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt169) ? ABSOLUTE(__Interrupt169) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt169) ? ABSOLUTE(__Interrupt169) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt170) ? ABSOLUTE(__Interrupt170) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt170) ? ABSOLUTE(__Interrupt170) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt171) ? ABSOLUTE(__Interrupt171) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt171) ? ABSOLUTE(__Interrupt171) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt172) ? ABSOLUTE(__Interrupt172) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt172) ? ABSOLUTE(__Interrupt172) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__I2C1BCInterrupt) ? ABSOLUTE(__I2C1BCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__I2C1BCInterrupt) ? ABSOLUTE(__I2C1BCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt174) ? ABSOLUTE(__Interrupt174) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt174) ? ABSOLUTE(__Interrupt174) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt175) ? ABSOLUTE(__Interrupt175) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt175) ? ABSOLUTE(__Interrupt175) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt176) ? ABSOLUTE(__Interrupt176) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt176) ? ABSOLUTE(__Interrupt176) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCMP0Interrupt) ? ABSOLUTE(__ADCMP0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCMP0Interrupt) ? ABSOLUTE(__ADCMP0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADCMP1Interrupt) ? ABSOLUTE(__ADCMP1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADCMP1Interrupt) ? ABSOLUTE(__ADCMP1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADFL0Interrupt) ? ABSOLUTE(__ADFL0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADFL0Interrupt) ? ABSOLUTE(__ADFL0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

 } >j_ivt


  /*
  ** User Code and Library Code
  **
  ** This section must not be assigned to __CODE_BASE,
  ** because CodeGuard(tm) sections may be located there.
  **
  ** Note that input sections *(.text) are not mapped here.
  ** The best-fit allocator locates them, so that .text
  ** may flow around PSV sections as needed.
  */
  .text :
  {
        *(.init);
        *(.user_init);
        KEEP (*(.handle));
        KEEP (*(.isr*));
        *(.libc) *(.libm) *(.libdsp);  /* keep together in this order */
        *(.lib*);
  } >program


  /*
  ** User-Defined Section in Program Memory
  **
  ** note: can specify an address using
  **       the following syntax:
  **
  **       usercode 0x1234 :
  **         {
  **           *(usercode);
  **         } >program
  */
  usercode :
  {
        *(usercode);
  } >program


  /*
  ** User-Defined Constants in Program Memory
  **
  ** For PSV type sections, the Load Memory Address (LMA)
  ** should be specified as follows:
  **
  **       userconst : AT(0x1234)
  **         {
  **           *(userconst);
  **         } >program
  **
  ** Note that mapping PSV sections in linker scripts
  ** is not generally recommended.
  **
  ** Because of page alignment restrictions, memory is
  ** often used more efficiently when PSV sections
  ** do not appear in the linker script.
  **
  ** For more information on memory allocation,
  ** please refer to chapter 10, 'Linker Processing'
  ** in the Assembler, Linker manual (DS51317).
  */


  /*
  ** Configuration Words
  */
  __FSEC :
  { KEEP (*(__FSEC.sec*))    } >FSEC
  __FBSLIM :
  { KEEP (*(__FBSLIM.sec*))    } >FBSLIM
  __FOSCSEL :
  { KEEP (*(__FOSCSEL.sec*))    } >FOSCSEL
  __FOSC :
  { KEEP (*(__FOSC.sec*))    } >FOSC
  __FWDT :
  { KEEP (*(__FWDT.sec*))    } >FWDT
  __FPOR :
  { KEEP (*(__FPOR.sec*))    } >FPOR
  __FICD :
  { KEEP (*(__FICD.sec*))    } >FICD
  __FDEVOPT :
  { KEEP (*(__FDEVOPT.sec*))    } >FDEVOPT
  __FALTREG :
  { KEEP (*(__FALTREG.sec*))    } >FALTREG






  /*
  ** =========== Data Memory ===========
  */


  /*
  ** ICD Debug Exec
  **
  ** This section provides optional storage for
  ** the ICD2 debugger. Define a global symbol
  ** named __ICD2RAM to enable ICD2. This section
  ** must be loaded at data address 0x1000.
  */
  .icd __DATA_BASE (NOLOAD):
  {
    . += (DEFINED (__ICD2RAM) ? 0x50 : 0 );
  } > data


  /*
  ** Other sections in data memory are not explicitly mapped.
  ** Instead they are allocated according to their section
  ** attributes, which is most efficient.
  ** 
  ** If a specific arrangement of sections is required
  ** (other than what can be achieved using attributes)
  ** additional sections may be defined here. See chapter
  ** 10.5 in the MPLAB ASM30/LINK30 User's Guide (DS51317)
  ** for more information.
  */


  /*
  ** ========== Debug Info ==============
  */

  .comment        0 : { *(.comment) }

  /*
  ** DWARF-2
  */
  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  .debug_ranges   0 : { *(.debug_ranges) }
  .debug_aranges  0 : { *(.debug_aranges) }

} /* SECTIONS */

/*
** ================= End of Section Map ================
*/

#if 1  /* Always include the IVT. Was: #if __XC16_VERSION < 1026 */
/*
** These definitions are not required for XC16 versions
** later than XC16 v1.25 as the linker defines the addresses.
**
** These definitons will cause a link error on a newer compiler
**
*/
/*
** Section Map for Interrupt Vector Tables
*/
SECTIONS
{

/*
** Interrupt Vector Table
*/
.ivt __IVT_BASE :
{
LONG(J__OscillatorFail);
LONG(J__AddressError);
LONG(J__HardTrapError);
LONG(J__StackError);
LONG(J__MathError);
LONG(J__ReservedTrap5);
LONG(J__SoftTrapError);
LONG(J__ReservedTrap7);
LONG(J__INT0Interrupt);
LONG(J__IC1Interrupt);
LONG(J__OC1Interrupt);
LONG(J__T1Interrupt);
LONG(J__Interrupt4);
LONG(J__Interrupt5);
LONG(J__Interrupt6);
LONG(J__T2Interrupt);
LONG(J__T3Interrupt);
LONG(J__SPI1ErrInterrupt);
LONG(J__SPI1Interrupt);
LONG(J__U1RXInterrupt);
LONG(J__U1TXInterrupt);
LONG(J__AD1Interrupt);
LONG(J__Interrupt14);
LONG(J__NVMInterrupt);
LONG(J__SI2C1Interrupt);
LONG(J__MI2C1Interrupt);
LONG(J__CMP1Interrupt);
LONG(J__CNInterrupt);
LONG(J__INT1Interrupt);
LONG(J__Interrupt21);
LONG(J__Interrupt22);
LONG(J__Interrupt23);
LONG(J__Interrupt24);
LONG(J__Interrupt25);
LONG(J__Interrupt26);
LONG(J__Interrupt27);
LONG(J__Interrupt28);
LONG(J__INT2Interrupt);
LONG(J__Interrupt30);
LONG(J__Interrupt31);
LONG(J__Interrupt32);
LONG(J__Interrupt33);
LONG(J__Interrupt34);
LONG(J__Interrupt35);
LONG(J__Interrupt36);
LONG(J__Interrupt37);
LONG(J__Interrupt38);
LONG(J__Interrupt39);
LONG(J__Interrupt40);
LONG(J__Interrupt41);
LONG(J__Interrupt42);
LONG(J__Interrupt43);
LONG(J__Interrupt44);
LONG(J__Interrupt45);
LONG(J__Interrupt46);
LONG(J__Interrupt47);
LONG(J__Interrupt48);
LONG(J__Interrupt49);
LONG(J__Interrupt50);
LONG(J__Interrupt51);
LONG(J__Interrupt52);
LONG(J__Interrupt53);
LONG(J__Interrupt54);
LONG(J__Interrupt55);
LONG(J__Interrupt56);
LONG(J__PWMSpEventMatchInterrupt);
LONG(J__Interrupt58);
LONG(J__Interrupt59);
LONG(J__Interrupt60);
LONG(J__Interrupt61);
LONG(J__Interrupt62);
LONG(J__Interrupt63);
LONG(J__Interrupt64);
LONG(J__U1ErrInterrupt);
LONG(J__Interrupt66);
LONG(J__Interrupt67);
LONG(J__Interrupt68);
LONG(J__Interrupt69);
LONG(J__Interrupt70);
LONG(J__Interrupt71);
LONG(J__Interrupt72);
LONG(J__PWMSecSpEventMatchInterrupt);
LONG(J__Interrupt74);
LONG(J__Interrupt75);
LONG(J__Interrupt76);
LONG(J__Interrupt77);
LONG(J__Interrupt78);
LONG(J__Interrupt79);
LONG(J__Interrupt80);
LONG(J__Interrupt81);
LONG(J__Interrupt82);
LONG(J__Interrupt83);
LONG(J__Interrupt84);
LONG(J__Interrupt85);
LONG(J__Interrupt86);
LONG(J__Interrupt87);
LONG(J__Interrupt88);
LONG(J__Interrupt89);
LONG(J__Interrupt90);
LONG(J__Interrupt91);
LONG(J__Interrupt92);
LONG(J__Interrupt93);
LONG(J__PWM1Interrupt);
LONG(J__PWM2Interrupt);
LONG(J__PWM3Interrupt);
LONG(J__Interrupt97);
LONG(J__Interrupt98);
LONG(J__Interrupt99);
LONG(J__Interrupt100);
LONG(J__Interrupt101);
LONG(J__Interrupt102);
LONG(J__CMP2Interrupt);
LONG(J__Interrupt104);
LONG(J__Interrupt105);
LONG(J__Interrupt106);
LONG(J__Interrupt107);
LONG(J__Interrupt108);
LONG(J__Interrupt109);
LONG(J__ADCAN0Interrupt);
LONG(J__ADCAN1Interrupt);
LONG(J__ADCAN2Interrupt);
LONG(J__ADCAN3Interrupt);
LONG(J__ADCAN4Interrupt);
LONG(J__ADCAN5Interrupt);
LONG(J__ADCAN6Interrupt);
LONG(J__ADCAN7Interrupt);
LONG(J__Interrupt118);
LONG(J__Interrupt119);
LONG(J__Interrupt120);
LONG(J__Interrupt121);
LONG(J__Interrupt122);
LONG(J__Interrupt123);
LONG(J__Interrupt124);
LONG(J__Interrupt125);
LONG(J__Interrupt126);
LONG(J__Interrupt127);
LONG(J__Interrupt128);
LONG(J__Interrupt129);
LONG(J__Interrupt130);
LONG(J__Interrupt131);
LONG(J__Interrupt132);
LONG(J__Interrupt133);
LONG(J__Interrupt134);
LONG(J__Interrupt135);
LONG(J__Interrupt136);
LONG(J__Interrupt137);
LONG(J__Interrupt138);
LONG(J__Interrupt139);
LONG(J__Interrupt140);
LONG(J__Interrupt141);
LONG(J__ICDInterrupt);
LONG(J__JTAGInterrupt);
LONG(J__Interrupt144);
LONG(J__Interrupt145);
LONG(J__Interrupt146);
LONG(J__Interrupt147);
LONG(J__Interrupt148);
LONG(J__Interrupt149);
LONG(J__Interrupt150);
LONG(J__ADCAN8Interrupt);
LONG(J__ADCAN9Interrupt);
LONG(J__ADCAN10Interrupt);
LONG(J__ADCAN11Interrupt);
LONG(J__ADCAN12Interrupt);
LONG(J__ADCAN13Interrupt);
LONG(J__ADCAN14Interrupt);
LONG(J__Interrupt158);
LONG(J__Interrupt159);
LONG(J__Interrupt160);
LONG(J__Interrupt161);
LONG(J__Interrupt162);
LONG(J__Interrupt163);
LONG(J__Interrupt164);
LONG(J__Interrupt165);
LONG(J__Interrupt166);
LONG(J__Interrupt167);
LONG(J__Interrupt168);
LONG(J__Interrupt169);
LONG(J__Interrupt170);
LONG(J__Interrupt171);
LONG(J__Interrupt172);
LONG(J__I2C1BCInterrupt);
LONG(J__Interrupt174);
LONG(J__Interrupt175);
LONG(J__Interrupt176);
LONG(J__ADCMP0Interrupt);
LONG(J__ADCMP1Interrupt);
LONG(J__ADFL0Interrupt);
  } >ivt


/*
** Alternate Interrupt Vector Table
*/
.aivt :
{
LONG(J__OscillatorFail);
LONG(J__AddressError);
LONG(J__HardTrapError);
LONG(J__StackError);
LONG(J__MathError);
LONG(J__ReservedTrap5);
LONG(J__SoftTrapError);
LONG(J__ReservedTrap7);
LONG(J__INT0Interrupt);
LONG(J__IC1Interrupt);
LONG(J__OC1Interrupt);
LONG(J__T1Interrupt);
LONG(J__Interrupt4);
LONG(J__Interrupt5);
LONG(J__Interrupt6);
LONG(J__T2Interrupt);
LONG(J__T3Interrupt);
LONG(J__SPI1ErrInterrupt);
LONG(J__SPI1Interrupt);
LONG(J__U1RXInterrupt);
LONG(J__U1TXInterrupt);
LONG(J__AD1Interrupt);
LONG(J__Interrupt14);
LONG(J__NVMInterrupt);
LONG(J__SI2C1Interrupt);
LONG(J__MI2C1Interrupt);
LONG(J__CMP1Interrupt);
LONG(J__CNInterrupt);
LONG(J__INT1Interrupt);
LONG(J__Interrupt21);
LONG(J__Interrupt22);
LONG(J__Interrupt23);
LONG(J__Interrupt24);
LONG(J__Interrupt25);
LONG(J__Interrupt26);
LONG(J__Interrupt27);
LONG(J__Interrupt28);
LONG(J__INT2Interrupt);
LONG(J__Interrupt30);
LONG(J__Interrupt31);
LONG(J__Interrupt32);
LONG(J__Interrupt33);
LONG(J__Interrupt34);
LONG(J__Interrupt35);
LONG(J__Interrupt36);
LONG(J__Interrupt37);
LONG(J__Interrupt38);
LONG(J__Interrupt39);
LONG(J__Interrupt40);
LONG(J__Interrupt41);
LONG(J__Interrupt42);
LONG(J__Interrupt43);
LONG(J__Interrupt44);
LONG(J__Interrupt45);
LONG(J__Interrupt46);
LONG(J__Interrupt47);
LONG(J__Interrupt48);
LONG(J__Interrupt49);
LONG(J__Interrupt50);
LONG(J__Interrupt51);
LONG(J__Interrupt52);
LONG(J__Interrupt53);
LONG(J__Interrupt54);
LONG(J__Interrupt55);
LONG(J__Interrupt56);
LONG(J__PWMSpEventMatchInterrupt);
LONG(J__Interrupt58);
LONG(J__Interrupt59);
LONG(J__Interrupt60);
LONG(J__Interrupt61);
LONG(J__Interrupt62);
LONG(J__Interrupt63);
LONG(J__Interrupt64);
LONG(J__U1ErrInterrupt);
LONG(J__Interrupt66);
LONG(J__Interrupt67);
LONG(J__Interrupt68);
LONG(J__Interrupt69);
LONG(J__Interrupt70);
LONG(J__Interrupt71);
LONG(J__Interrupt72);
LONG(J__PWMSecSpEventMatchInterrupt);
LONG(J__Interrupt74);
LONG(J__Interrupt75);
LONG(J__Interrupt76);
LONG(J__Interrupt77);
LONG(J__Interrupt78);
LONG(J__Interrupt79);
LONG(J__Interrupt80);
LONG(J__Interrupt81);
LONG(J__Interrupt82);
LONG(J__Interrupt83);
LONG(J__Interrupt84);
LONG(J__Interrupt85);
LONG(J__Interrupt86);
LONG(J__Interrupt87);
LONG(J__Interrupt88);
LONG(J__Interrupt89);
LONG(J__Interrupt90);
LONG(J__Interrupt91);
LONG(J__Interrupt92);
LONG(J__Interrupt93);
LONG(J__PWM1Interrupt);
LONG(J__PWM2Interrupt);
LONG(J__PWM3Interrupt);
LONG(J__Interrupt97);
LONG(J__Interrupt98);
LONG(J__Interrupt99);
LONG(J__Interrupt100);
LONG(J__Interrupt101);
LONG(J__Interrupt102);
LONG(J__CMP2Interrupt);
LONG(J__Interrupt104);
LONG(J__Interrupt105);
LONG(J__Interrupt106);
LONG(J__Interrupt107);
LONG(J__Interrupt108);
LONG(J__Interrupt109);
LONG(J__ADCAN0Interrupt);
LONG(J__ADCAN1Interrupt);
LONG(J__ADCAN2Interrupt);
LONG(J__ADCAN3Interrupt);
LONG(J__ADCAN4Interrupt);
LONG(J__ADCAN5Interrupt);
LONG(J__ADCAN6Interrupt);
LONG(J__ADCAN7Interrupt);
LONG(J__Interrupt118);
LONG(J__Interrupt119);
LONG(J__Interrupt120);
LONG(J__Interrupt121);
LONG(J__Interrupt122);
LONG(J__Interrupt123);
LONG(J__Interrupt124);
LONG(J__Interrupt125);
LONG(J__Interrupt126);
LONG(J__Interrupt127);
LONG(J__Interrupt128);
LONG(J__Interrupt129);
LONG(J__Interrupt130);
LONG(J__Interrupt131);
LONG(J__Interrupt132);
LONG(J__Interrupt133);
LONG(J__Interrupt134);
LONG(J__Interrupt135);
LONG(J__Interrupt136);
LONG(J__Interrupt137);
LONG(J__Interrupt138);
LONG(J__Interrupt139);
LONG(J__Interrupt140);
LONG(J__Interrupt141);
LONG(J__ICDInterrupt);
LONG(J__JTAGInterrupt);
LONG(J__Interrupt144);
LONG(J__Interrupt145);
LONG(J__Interrupt146);
LONG(J__Interrupt147);
LONG(J__Interrupt148);
LONG(J__Interrupt149);
LONG(J__Interrupt150);
LONG(J__ADCAN8Interrupt);
LONG(J__ADCAN9Interrupt);
LONG(J__ADCAN10Interrupt);
LONG(J__ADCAN11Interrupt);
LONG(J__ADCAN12Interrupt);
LONG(J__ADCAN13Interrupt);
LONG(J__ADCAN14Interrupt);
LONG(J__Interrupt158);
LONG(J__Interrupt159);
LONG(J__Interrupt160);
LONG(J__Interrupt161);
LONG(J__Interrupt162);
LONG(J__Interrupt163);
LONG(J__Interrupt164);
LONG(J__Interrupt165);
LONG(J__Interrupt166);
LONG(J__Interrupt167);
LONG(J__Interrupt168);
LONG(J__Interrupt169);
LONG(J__Interrupt170);
LONG(J__Interrupt171);
LONG(J__Interrupt172);
LONG(J__I2C1BCInterrupt);
LONG(J__Interrupt174);
LONG(J__Interrupt175);
LONG(J__Interrupt176);
LONG(J__ADCMP0Interrupt);
LONG(J__ADCMP1Interrupt);
LONG(J__ADFL0Interrupt);
  } >program
} /* SECTIONS */
#endif


/*
** ============== Equates for SFR Addresses =============
*/

 WREG0        = 0x0;
_WREG0        = 0x0;
 WREG1        = 0x2;
_WREG1        = 0x2;
 WREG2        = 0x4;
_WREG2        = 0x4;
 WREG3        = 0x6;
_WREG3        = 0x6;
 WREG4        = 0x8;
_WREG4        = 0x8;
 WREG5        = 0xA;
_WREG5        = 0xA;
 WREG6        = 0xC;
_WREG6        = 0xC;
 WREG7        = 0xE;
_WREG7        = 0xE;
 WREG8        = 0x10;
_WREG8        = 0x10;
 WREG9        = 0x12;
_WREG9        = 0x12;
 WREG10       = 0x14;
_WREG10       = 0x14;
 WREG11       = 0x16;
_WREG11       = 0x16;
 WREG12       = 0x18;
_WREG12       = 0x18;
 WREG13       = 0x1A;
_WREG13       = 0x1A;
 WREG14       = 0x1C;
_WREG14       = 0x1C;
 WREG15       = 0x1E;
_WREG15       = 0x1E;
 SPLIM        = 0x20;
_SPLIM        = 0x20;
 ACCAL        = 0x22;
_ACCAL        = 0x22;
 ACCAH        = 0x24;
_ACCAH        = 0x24;
 ACCAU        = 0x26;
_ACCAU        = 0x26;
 ACCBL        = 0x28;
_ACCBL        = 0x28;
 ACCBH        = 0x2A;
_ACCBH        = 0x2A;
 ACCBU        = 0x2C;
_ACCBU        = 0x2C;
 PCL          = 0x2E;
_PCL          = 0x2E;
 PCH          = 0x30;
_PCH          = 0x30;
 DSRPAG       = 0x32;
_DSRPAG       = 0x32;
_DSRPAGbits   = 0x32;
 DSWPAG       = 0x34;
_DSWPAG       = 0x34;
_DSWPAGbits   = 0x34;
 RCOUNT       = 0x36;
_RCOUNT       = 0x36;
 DCOUNT       = 0x38;
_DCOUNT       = 0x38;
 DOSTARTL     = 0x3A;
_DOSTARTL     = 0x3A;
 DOSTARTH     = 0x3C;
_DOSTARTH     = 0x3C;
 DOENDL       = 0x3E;
_DOENDL       = 0x3E;
 DOENDH       = 0x40;
_DOENDH       = 0x40;
 SR           = 0x42;
_SR           = 0x42;
_SRbits       = 0x42;
 CORCON       = 0x44;
_CORCON       = 0x44;
_CORCONbits   = 0x44;
 MODCON       = 0x46;
_MODCON       = 0x46;
_MODCONbits   = 0x46;
 XMODSRT      = 0x48;
_XMODSRT      = 0x48;
 XMODEND      = 0x4A;
_XMODEND      = 0x4A;
 YMODSRT      = 0x4C;
_YMODSRT      = 0x4C;
 YMODEND      = 0x4E;
_YMODEND      = 0x4E;
 XBREV        = 0x50;
_XBREV        = 0x50;
_XBREVbits    = 0x50;
 DISICNT      = 0x52;
_DISICNT      = 0x52;
 TBLPAG       = 0x54;
_TBLPAG       = 0x54;
_TBLPAGbits   = 0x54;
 CTXTSTAT     = 0x5A;
_CTXTSTAT     = 0x5A;
_CTXTSTATbits = 0x5A;
 TMR1         = 0x100;
_TMR1         = 0x100;
 PR1          = 0x102;
_PR1          = 0x102;
 T1CON        = 0x104;
_T1CON        = 0x104;
_T1CONbits    = 0x104;
 TMR2         = 0x106;
_TMR2         = 0x106;
 TMR3HLD      = 0x108;
_TMR3HLD      = 0x108;
 TMR3         = 0x10A;
_TMR3         = 0x10A;
 PR2          = 0x10C;
_PR2          = 0x10C;
 PR3          = 0x10E;
_PR3          = 0x10E;
 T2CON        = 0x110;
_T2CON        = 0x110;
_T2CONbits    = 0x110;
 T3CON        = 0x112;
_T3CON        = 0x112;
_T3CONbits    = 0x112;
 IC1CON1      = 0x140;
_IC1CON1      = 0x140;
_IC1CON1bits  = 0x140;
 IC1CON2      = 0x142;
_IC1CON2      = 0x142;
_IC1CON2bits  = 0x142;
 IC1BUF       = 0x144;
_IC1BUF       = 0x144;
 IC1TMR       = 0x146;
_IC1TMR       = 0x146;
 I2C1CON1     = 0x200;
_I2C1CON1     = 0x200;
_I2C1CON1bits = 0x200;
 I2C1CONL     = 0x200;
_I2C1CONL     = 0x200;
_I2C1CONLbits = 0x200;
 I2C1CON2     = 0x202;
_I2C1CON2     = 0x202;
_I2C1CON2bits = 0x202;
 I2C1CONH     = 0x202;
_I2C1CONH     = 0x202;
_I2C1CONHbits = 0x202;
 I2C1STAT     = 0x204;
_I2C1STAT     = 0x204;
_I2C1STATbits = 0x204;
 I2C1ADD      = 0x206;
_I2C1ADD      = 0x206;
_I2C1ADDbits  = 0x206;
 I2C1MSK      = 0x208;
_I2C1MSK      = 0x208;
_I2C1MSKbits  = 0x208;
 I2C1BRG      = 0x20A;
_I2C1BRG      = 0x20A;
 I2C1TRN      = 0x20C;
_I2C1TRN      = 0x20C;
_I2C1TRNbits  = 0x20C;
 I2C1RCV      = 0x20E;
_I2C1RCV      = 0x20E;
_I2C1RCVbits  = 0x20E;
 U1MODE       = 0x220;
_U1MODE       = 0x220;
_U1MODEbits   = 0x220;
 U1STA        = 0x222;
_U1STA        = 0x222;
_U1STAbits    = 0x222;
 U1TXREG      = 0x224;
_U1TXREG      = 0x224;
 U1RXREG      = 0x226;
_U1RXREG      = 0x226;
 U1BRG        = 0x228;
_U1BRG        = 0x228;
 SPI1STAT     = 0x240;
_SPI1STAT     = 0x240;
_SPI1STATbits = 0x240;
 SPI1CON1     = 0x242;
_SPI1CON1     = 0x242;
_SPI1CON1bits = 0x242;
 SPI1CON2     = 0x244;
_SPI1CON2     = 0x244;
_SPI1CON2bits = 0x244;
 SPI1BUF      = 0x248;
_SPI1BUF      = 0x248;
 ADCON1L      = 0x300;
_ADCON1L      = 0x300;
_ADCON1Lbits  = 0x300;
 ADCON1H      = 0x302;
_ADCON1H      = 0x302;
_ADCON1Hbits  = 0x302;
 ADCON2L      = 0x304;
_ADCON2L      = 0x304;
_ADCON2Lbits  = 0x304;
 ADCON2H      = 0x306;
_ADCON2H      = 0x306;
_ADCON2Hbits  = 0x306;
 ADCON3L      = 0x308;
_ADCON3L      = 0x308;
_ADCON3Lbits  = 0x308;
 ADCON3H      = 0x30A;
_ADCON3H      = 0x30A;
_ADCON3Hbits  = 0x30A;
 ADCON4L      = 0x30C;
_ADCON4L      = 0x30C;
_ADCON4Lbits  = 0x30C;
 ADCON4H      = 0x30E;
_ADCON4H      = 0x30E;
_ADCON4Hbits  = 0x30E;
 ADMOD0L      = 0x310;
_ADMOD0L      = 0x310;
_ADMOD0Lbits  = 0x310;
 ADMOD0H      = 0x312;
_ADMOD0H      = 0x312;
_ADMOD0Hbits  = 0x312;
 ADIEL        = 0x320;
_ADIEL        = 0x320;
_ADIELbits    = 0x320;
 ADSTATL      = 0x330;
_ADSTATL      = 0x330;
_ADSTATLbits  = 0x330;
 ADCMP0ENL    = 0x338;
_ADCMP0ENL    = 0x338;
_ADCMP0ENLbits = 0x338;
 ADCMP0LO     = 0x33C;
_ADCMP0LO     = 0x33C;
 ADCMP0HI     = 0x33E;
_ADCMP0HI     = 0x33E;
 ADCMP1ENL    = 0x340;
_ADCMP1ENL    = 0x340;
_ADCMP1ENLbits = 0x340;
 ADCMP1LO     = 0x344;
_ADCMP1LO     = 0x344;
 ADCMP1HI     = 0x346;
_ADCMP1HI     = 0x346;
 ADFL0DAT     = 0x368;
_ADFL0DAT     = 0x368;
 ADFL0CON     = 0x36A;
_ADFL0CON     = 0x36A;
_ADFL0CONbits = 0x36A;
 ADTRIG0L     = 0x380;
_ADTRIG0L     = 0x380;
_ADTRIG0Lbits = 0x380;
 ADTRIG0H     = 0x382;
_ADTRIG0H     = 0x382;
_ADTRIG0Hbits = 0x382;
 ADTRIG1L     = 0x384;
_ADTRIG1L     = 0x384;
_ADTRIG1Lbits = 0x384;
 ADTRIG1H     = 0x386;
_ADTRIG1H     = 0x386;
_ADTRIG1Hbits = 0x386;
 ADTRIG2L     = 0x388;
_ADTRIG2L     = 0x388;
_ADTRIG2Lbits = 0x388;
 ADTRIG2H     = 0x38A;
_ADTRIG2H     = 0x38A;
_ADTRIG2Hbits = 0x38A;
 ADTRIG3L     = 0x38C;
_ADTRIG3L     = 0x38C;
 ADTRIG3H     = 0x38E;
_ADTRIG3H     = 0x38E;
_ADTRIG3Hbits = 0x38E;
 ADCMP0CON    = 0x3A0;
_ADCMP0CON    = 0x3A0;
_ADCMP0CONbits = 0x3A0;
 ADCMP1CON    = 0x3A4;
_ADCMP1CON    = 0x3A4;
_ADCMP1CONbits = 0x3A4;
 ADLVLTRGL    = 0x3D0;
_ADLVLTRGL    = 0x3D0;
_ADLVLTRGLbits = 0x3D0;
 ADCORE0L     = 0x3D4;
_ADCORE0L     = 0x3D4;
_ADCORE0Lbits = 0x3D4;
 ADCORE0H     = 0x3D6;
_ADCORE0H     = 0x3D6;
_ADCORE0Hbits = 0x3D6;
 ADCORE1L     = 0x3D8;
_ADCORE1L     = 0x3D8;
_ADCORE1Lbits = 0x3D8;
 ADCORE1H     = 0x3DA;
_ADCORE1H     = 0x3DA;
_ADCORE1Hbits = 0x3DA;
 ADEIEL       = 0x3F0;
_ADEIEL       = 0x3F0;
_ADEIELbits   = 0x3F0;
 ADEISTATL    = 0x3F8;
_ADEISTATL    = 0x3F8;
_ADEISTATLbits = 0x3F8;
 ADCON5L      = 0x400;
_ADCON5L      = 0x400;
_ADCON5Lbits  = 0x400;
 ADCON5H      = 0x402;
_ADCON5H      = 0x402;
_ADCON5Hbits  = 0x402;
 ADCAL0L      = 0x404;
_ADCAL0L      = 0x404;
_ADCAL0Lbits  = 0x404;
 ADCAL1H      = 0x40A;
_ADCAL1H      = 0x40A;
_ADCAL1Hbits  = 0x40A;
 ADCBUF0      = 0x40C;
_ADCBUF0      = 0x40C;
 ADCBUF1      = 0x40E;
_ADCBUF1      = 0x40E;
 ADCBUF2      = 0x410;
_ADCBUF2      = 0x410;
 ADCBUF3      = 0x412;
_ADCBUF3      = 0x412;
 ADCBUF4      = 0x414;
_ADCBUF4      = 0x414;
 ADCBUF5      = 0x416;
_ADCBUF5      = 0x416;
 ADCBUF6      = 0x418;
_ADCBUF6      = 0x418;
 ADCBUF7      = 0x41A;
_ADCBUF7      = 0x41A;
 ADCBUF8      = 0x41C;
_ADCBUF8      = 0x41C;
 ADCBUF9      = 0x41E;
_ADCBUF9      = 0x41E;
 ADCBUF10     = 0x420;
_ADCBUF10     = 0x420;
 ADCBUF11     = 0x422;
_ADCBUF11     = 0x422;
 ADCBUF12     = 0x424;
_ADCBUF12     = 0x424;
 ADCBUF13     = 0x426;
_ADCBUF13     = 0x426;
 ADCBUF14     = 0x428;
_ADCBUF14     = 0x428;
 PGA1CON      = 0x504;
_PGA1CON      = 0x504;
_PGA1CONbits  = 0x504;
 PGA1CAL      = 0x506;
_PGA1CAL      = 0x506;
_PGA1CALbits  = 0x506;
 PGA2CON      = 0x508;
_PGA2CON      = 0x508;
_PGA2CONbits  = 0x508;
 PGA2CAL      = 0x50A;
_PGA2CAL      = 0x50A;
_PGA2CALbits  = 0x50A;
 CMP1CON      = 0x540;
_CMP1CON      = 0x540;
_CMP1CONbits  = 0x540;
 CMP1DAC      = 0x542;
_CMP1DAC      = 0x542;
_CMP1DACbits  = 0x542;
 CMP2CON      = 0x544;
_CMP2CON      = 0x544;
_CMP2CONbits  = 0x544;
 CMP2DAC      = 0x546;
_CMP2DAC      = 0x546;
_CMP2DACbits  = 0x546;
 RPOR0        = 0x670;
_RPOR0        = 0x670;
_RPOR0bits    = 0x670;
 RPOR1        = 0x672;
_RPOR1        = 0x672;
_RPOR1bits    = 0x672;
 RPOR2        = 0x674;
_RPOR2        = 0x674;
_RPOR2bits    = 0x674;
 RPOR3        = 0x676;
_RPOR3        = 0x676;
_RPOR3bits    = 0x676;
 RPOR4        = 0x678;
_RPOR4        = 0x678;
_RPOR4bits    = 0x678;
 RPOR5        = 0x67A;
_RPOR5        = 0x67A;
_RPOR5bits    = 0x67A;
 RPOR6        = 0x67C;
_RPOR6        = 0x67C;
_RPOR6bits    = 0x67C;
 RPOR7        = 0x67E;
_RPOR7        = 0x67E;
_RPOR7bits    = 0x67E;
 RPOR8        = 0x680;
_RPOR8        = 0x680;
_RPOR8bits    = 0x680;
 RPOR9        = 0x682;
_RPOR9        = 0x682;
_RPOR9bits    = 0x682;
 RPOR10       = 0x684;
_RPOR10       = 0x684;
_RPOR10bits   = 0x684;
 RPINR0       = 0x6A0;
_RPINR0       = 0x6A0;
_RPINR0bits   = 0x6A0;
 RPINR1       = 0x6A2;
_RPINR1       = 0x6A2;
_RPINR1bits   = 0x6A2;
 RPINR2       = 0x6A4;
_RPINR2       = 0x6A4;
_RPINR2bits   = 0x6A4;
 RPINR3       = 0x6A6;
_RPINR3       = 0x6A6;
_RPINR3bits   = 0x6A6;
 RPINR7       = 0x6AE;
_RPINR7       = 0x6AE;
_RPINR7bits   = 0x6AE;
 RPINR11      = 0x6B6;
_RPINR11      = 0x6B6;
_RPINR11bits  = 0x6B6;
 RPINR12      = 0x6B8;
_RPINR12      = 0x6B8;
_RPINR12bits  = 0x6B8;
 RPINR13      = 0x6BA;
_RPINR13      = 0x6BA;
_RPINR13bits  = 0x6BA;
 RPINR18      = 0x6C4;
_RPINR18      = 0x6C4;
_RPINR18bits  = 0x6C4;
 RPINR20      = 0x6C8;
_RPINR20      = 0x6C8;
_RPINR20bits  = 0x6C8;
 RPINR21      = 0x6CA;
_RPINR21      = 0x6CA;
_RPINR21bits  = 0x6CA;
 RPINR37      = 0x6EA;
_RPINR37      = 0x6EA;
_RPINR37bits  = 0x6EA;
 RPINR38      = 0x6EC;
_RPINR38      = 0x6EC;
_RPINR38bits  = 0x6EC;
 RPINR42      = 0x6F4;
_RPINR42      = 0x6F4;
_RPINR42bits  = 0x6F4;
 RPINR43      = 0x6F6;
_RPINR43      = 0x6F6;
_RPINR43bits  = 0x6F6;
 NVMCON       = 0x728;
_NVMCON       = 0x728;
_NVMCONbits   = 0x728;
 NVMADR       = 0x72A;
_NVMADR       = 0x72A;
_NVMADRbits   = 0x72A;
 NVMADRL      = 0x72A;
_NVMADRL      = 0x72A;
_NVMADRLbits  = 0x72A;
 NVMADRH      = 0x72C;
_NVMADRH      = 0x72C;
_NVMADRHbits  = 0x72C;
 NVMADRU      = 0x72C;
_NVMADRU      = 0x72C;
_NVMADRUbits  = 0x72C;
 NVMKEY       = 0x72E;
_NVMKEY       = 0x72E;
 NVMSRCADDR   = 0x730;
_NVMSRCADDR   = 0x730;
_NVMSRCADDRbits = 0x730;
 NVMSRCADR    = 0x730;
_NVMSRCADR    = 0x730;
_NVMSRCADRbits = 0x730;
 NVMSRCADRL   = 0x730;
_NVMSRCADRL   = 0x730;
_NVMSRCADRLbits = 0x730;
 NVMSRCADRH   = 0x732;
_NVMSRCADRH   = 0x732;
_NVMSRCADRHbits = 0x732;
 RCON         = 0x740;
_RCON         = 0x740;
_RCONbits     = 0x740;
 OSCCON       = 0x742;
_OSCCON       = 0x742;
_OSCCONbits   = 0x742;
 OSCCONL      = 0x742;
_OSCCONL      = 0x742;
 OSCCONH      = 0x743;
_OSCCONH      = 0x743;
 CLKDIV       = 0x744;
_CLKDIV       = 0x744;
_CLKDIVbits   = 0x744;
 PLLFBD       = 0x746;
_PLLFBD       = 0x746;
_PLLFBDbits   = 0x746;
 OSCTUN       = 0x748;
_OSCTUN       = 0x748;
_OSCTUNbits   = 0x748;
 LFSR         = 0x74C;
_LFSR         = 0x74C;
_LFSRbits     = 0x74C;
 ACLKCON      = 0x750;
_ACLKCON      = 0x750;
_ACLKCONbits  = 0x750;
 PMD1         = 0x760;
_PMD1         = 0x760;
_PMD1bits     = 0x760;
 PMD2         = 0x762;
_PMD2         = 0x762;
_PMD2bits     = 0x762;
 PMD3         = 0x764;
_PMD3         = 0x764;
_PMD3bits     = 0x764;
 PMD6         = 0x76A;
_PMD6         = 0x76A;
_PMD6bits     = 0x76A;
 PMD7         = 0x76C;
_PMD7         = 0x76C;
_PMD7bits     = 0x76C;
 PMD8         = 0x76E;
_PMD8         = 0x76E;
_PMD8bits     = 0x76E;
 IFS0         = 0x800;
_IFS0         = 0x800;
_IFS0bits     = 0x800;
 IFS1         = 0x802;
_IFS1         = 0x802;
_IFS1bits     = 0x802;
 IFS3         = 0x806;
_IFS3         = 0x806;
_IFS3bits     = 0x806;
 IFS4         = 0x808;
_IFS4         = 0x808;
_IFS4bits     = 0x808;
 IFS5         = 0x80A;
_IFS5         = 0x80A;
_IFS5bits     = 0x80A;
 IFS6         = 0x80C;
_IFS6         = 0x80C;
_IFS6bits     = 0x80C;
 IFS7         = 0x80E;
_IFS7         = 0x80E;
_IFS7bits     = 0x80E;
 IFS8         = 0x810;
_IFS8         = 0x810;
 IFS9         = 0x812;
_IFS9         = 0x812;
_IFS9bits     = 0x812;
 IFS10        = 0x814;
_IFS10        = 0x814;
_IFS10bits    = 0x814;
 IFS11        = 0x816;
_IFS11        = 0x816;
_IFS11bits    = 0x816;
 IEC0         = 0x820;
_IEC0         = 0x820;
_IEC0bits     = 0x820;
 IEC1         = 0x822;
_IEC1         = 0x822;
_IEC1bits     = 0x822;
 IEC3         = 0x826;
_IEC3         = 0x826;
_IEC3bits     = 0x826;
 IEC4         = 0x828;
_IEC4         = 0x828;
_IEC4bits     = 0x828;
 IEC5         = 0x82A;
_IEC5         = 0x82A;
_IEC5bits     = 0x82A;
 IEC6         = 0x82C;
_IEC6         = 0x82C;
_IEC6bits     = 0x82C;
 IEC7         = 0x82E;
_IEC7         = 0x82E;
_IEC7bits     = 0x82E;
 IEC9         = 0x832;
_IEC9         = 0x832;
_IEC9bits     = 0x832;
 IEC10        = 0x834;
_IEC10        = 0x834;
_IEC10bits    = 0x834;
 IEC11        = 0x836;
_IEC11        = 0x836;
_IEC11bits    = 0x836;
 IPC0         = 0x840;
_IPC0         = 0x840;
_IPC0bits     = 0x840;
 IPC1         = 0x842;
_IPC1         = 0x842;
_IPC1bits     = 0x842;
 IPC2         = 0x844;
_IPC2         = 0x844;
_IPC2bits     = 0x844;
 IPC3         = 0x846;
_IPC3         = 0x846;
_IPC3bits     = 0x846;
 IPC4         = 0x848;
_IPC4         = 0x848;
_IPC4bits     = 0x848;
 IPC5         = 0x84A;
_IPC5         = 0x84A;
_IPC5bits     = 0x84A;
 IPC7         = 0x84E;
_IPC7         = 0x84E;
_IPC7bits     = 0x84E;
 IPC14        = 0x85C;
_IPC14        = 0x85C;
_IPC14bits    = 0x85C;
 IPC16        = 0x860;
_IPC16        = 0x860;
_IPC16bits    = 0x860;
 IPC18        = 0x864;
_IPC18        = 0x864;
_IPC18bits    = 0x864;
 IPC23        = 0x86E;
_IPC23        = 0x86E;
_IPC23bits    = 0x86E;
 IPC24        = 0x870;
_IPC24        = 0x870;
_IPC24bits    = 0x870;
 IPC25        = 0x872;
_IPC25        = 0x872;
_IPC25bits    = 0x872;
 IPC27        = 0x876;
_IPC27        = 0x876;
_IPC27bits    = 0x876;
 IPC28        = 0x878;
_IPC28        = 0x878;
_IPC28bits    = 0x878;
 IPC29        = 0x87A;
_IPC29        = 0x87A;
_IPC29bits    = 0x87A;
 IPC37        = 0x88A;
_IPC37        = 0x88A;
_IPC37bits    = 0x88A;
 IPC38        = 0x88C;
_IPC38        = 0x88C;
_IPC38bits    = 0x88C;
 IPC39        = 0x88E;
_IPC39        = 0x88E;
_IPC39bits    = 0x88E;
 IPC43        = 0x896;
_IPC43        = 0x896;
_IPC43bits    = 0x896;
 IPC44        = 0x898;
_IPC44        = 0x898;
_IPC44bits    = 0x898;
 IPC46        = 0x89C;
_IPC46        = 0x89C;
_IPC46bits    = 0x89C;
 IPC47        = 0x89E;
_IPC47        = 0x89E;
_IPC47bits    = 0x89E;
 INTCON1      = 0x8C0;
_INTCON1      = 0x8C0;
_INTCON1bits  = 0x8C0;
 INTCON2      = 0x8C2;
_INTCON2      = 0x8C2;
_INTCON2bits  = 0x8C2;
 INTCON3      = 0x8C4;
_INTCON3      = 0x8C4;
_INTCON3bits  = 0x8C4;
 INTCON4      = 0x8C6;
_INTCON4      = 0x8C6;
_INTCON4bits  = 0x8C6;
 INTTREG      = 0x8C8;
_INTTREG      = 0x8C8;
_INTTREGbits  = 0x8C8;
 OC1CON1      = 0x900;
_OC1CON1      = 0x900;
_OC1CON1bits  = 0x900;
 OC1CON2      = 0x902;
_OC1CON2      = 0x902;
_OC1CON2bits  = 0x902;
 OC1RS        = 0x904;
_OC1RS        = 0x904;
 OC1R         = 0x906;
_OC1R         = 0x906;
 OC1TMR       = 0x908;
_OC1TMR       = 0x908;
 PTCON        = 0xC00;
_PTCON        = 0xC00;
_PTCONbits    = 0xC00;
 PTCON2       = 0xC02;
_PTCON2       = 0xC02;
_PTCON2bits   = 0xC02;
 PTPER        = 0xC04;
_PTPER        = 0xC04;
 SEVTCMP      = 0xC06;
_SEVTCMP      = 0xC06;
_SEVTCMPbits  = 0xC06;
 MDC          = 0xC0A;
_MDC          = 0xC0A;
 STCON        = 0xC0E;
_STCON        = 0xC0E;
_STCONbits    = 0xC0E;
 STCON2       = 0xC10;
_STCON2       = 0xC10;
_STCON2bits   = 0xC10;
 STPER        = 0xC12;
_STPER        = 0xC12;
 SSEVTCMP     = 0xC14;
_SSEVTCMP     = 0xC14;
_SSEVTCMPbits = 0xC14;
 CHOP         = 0xC1A;
_CHOP         = 0xC1A;
_CHOPbits     = 0xC1A;
 PWMKEY       = 0xC1E;
_PWMKEY       = 0xC1E;
 PWMCON1      = 0xC20;
_PWMCON1      = 0xC20;
_PWMCON1bits  = 0xC20;
 IOCON1       = 0xC22;
_IOCON1       = 0xC22;
_IOCON1bits   = 0xC22;
 FCLCON1      = 0xC24;
_FCLCON1      = 0xC24;
_FCLCON1bits  = 0xC24;
 PDC1         = 0xC26;
_PDC1         = 0xC26;
 PHASE1       = 0xC28;
_PHASE1       = 0xC28;
 DTR1         = 0xC2A;
_DTR1         = 0xC2A;
 ALTDTR1      = 0xC2C;
_ALTDTR1      = 0xC2C;
 SDC1         = 0xC2E;
_SDC1         = 0xC2E;
 SPHASE1      = 0xC30;
_SPHASE1      = 0xC30;
 TRIG1        = 0xC32;
_TRIG1        = 0xC32;
_TRIG1bits    = 0xC32;
 TRGCON1      = 0xC34;
_TRGCON1      = 0xC34;
_TRGCON1bits  = 0xC34;
 STRIG1       = 0xC36;
_STRIG1       = 0xC36;
_STRIG1bits   = 0xC36;
 PWMCAP1      = 0xC38;
_PWMCAP1      = 0xC38;
_PWMCAP1bits  = 0xC38;
 LEBCON1      = 0xC3A;
_LEBCON1      = 0xC3A;
_LEBCON1bits  = 0xC3A;
 LEBDLY1      = 0xC3C;
_LEBDLY1      = 0xC3C;
_LEBDLY1bits  = 0xC3C;
 AUXCON1      = 0xC3E;
_AUXCON1      = 0xC3E;
_AUXCON1bits  = 0xC3E;
 PWMCON2      = 0xC40;
_PWMCON2      = 0xC40;
_PWMCON2bits  = 0xC40;
 IOCON2       = 0xC42;
_IOCON2       = 0xC42;
_IOCON2bits   = 0xC42;
 FCLCON2      = 0xC44;
_FCLCON2      = 0xC44;
_FCLCON2bits  = 0xC44;
 PDC2         = 0xC46;
_PDC2         = 0xC46;
 PHASE2       = 0xC48;
_PHASE2       = 0xC48;
 DTR2         = 0xC4A;
_DTR2         = 0xC4A;
 ALTDTR2      = 0xC4C;
_ALTDTR2      = 0xC4C;
 SDC2         = 0xC4E;
_SDC2         = 0xC4E;
 SPHASE2      = 0xC50;
_SPHASE2      = 0xC50;
 TRIG2        = 0xC52;
_TRIG2        = 0xC52;
_TRIG2bits    = 0xC52;
 TRGCON2      = 0xC54;
_TRGCON2      = 0xC54;
_TRGCON2bits  = 0xC54;
 STRIG2       = 0xC56;
_STRIG2       = 0xC56;
_STRIG2bits   = 0xC56;
 PWMCAP2      = 0xC58;
_PWMCAP2      = 0xC58;
_PWMCAP2bits  = 0xC58;
 LEBCON2      = 0xC5A;
_LEBCON2      = 0xC5A;
_LEBCON2bits  = 0xC5A;
 LEBDLY2      = 0xC5C;
_LEBDLY2      = 0xC5C;
_LEBDLY2bits  = 0xC5C;
 AUXCON2      = 0xC5E;
_AUXCON2      = 0xC5E;
_AUXCON2bits  = 0xC5E;
 PWMCON3      = 0xC60;
_PWMCON3      = 0xC60;
_PWMCON3bits  = 0xC60;
 IOCON3       = 0xC62;
_IOCON3       = 0xC62;
_IOCON3bits   = 0xC62;
 FCLCON3      = 0xC64;
_FCLCON3      = 0xC64;
_FCLCON3bits  = 0xC64;
 PDC3         = 0xC66;
_PDC3         = 0xC66;
 PHASE3       = 0xC68;
_PHASE3       = 0xC68;
 DTR3         = 0xC6A;
_DTR3         = 0xC6A;
 ALTDTR3      = 0xC6C;
_ALTDTR3      = 0xC6C;
 SDC3         = 0xC6E;
_SDC3         = 0xC6E;
 SPHASE3      = 0xC70;
_SPHASE3      = 0xC70;
 TRIG3        = 0xC72;
_TRIG3        = 0xC72;
_TRIG3bits    = 0xC72;
 TRGCON3      = 0xC74;
_TRGCON3      = 0xC74;
_TRGCON3bits  = 0xC74;
 STRIG3       = 0xC76;
_STRIG3       = 0xC76;
_STRIG3bits   = 0xC76;
 PWMCAP3      = 0xC78;
_PWMCAP3      = 0xC78;
_PWMCAP3bits  = 0xC78;
 LEBCON3      = 0xC7A;
_LEBCON3      = 0xC7A;
_LEBCON3bits  = 0xC7A;
 LEBDLY3      = 0xC7C;
_LEBDLY3      = 0xC7C;
_LEBDLY3bits  = 0xC7C;
 AUXCON3      = 0xC7E;
_AUXCON3      = 0xC7E;
_AUXCON3bits  = 0xC7E;
 TRISA        = 0xE00;
_TRISA        = 0xE00;
_TRISAbits    = 0xE00;
 PORTA        = 0xE02;
_PORTA        = 0xE02;
_PORTAbits    = 0xE02;
 LATA         = 0xE04;
_LATA         = 0xE04;
_LATAbits     = 0xE04;
 ODCA         = 0xE06;
_ODCA         = 0xE06;
_ODCAbits     = 0xE06;
 CNENA        = 0xE08;
_CNENA        = 0xE08;
_CNENAbits    = 0xE08;
 CNPUA        = 0xE0A;
_CNPUA        = 0xE0A;
_CNPUAbits    = 0xE0A;
 CNPDA        = 0xE0C;
_CNPDA        = 0xE0C;
_CNPDAbits    = 0xE0C;
 ANSELA       = 0xE0E;
_ANSELA       = 0xE0E;
_ANSELAbits   = 0xE0E;
 TRISB        = 0xE10;
_TRISB        = 0xE10;
_TRISBbits    = 0xE10;
 PORTB        = 0xE12;
_PORTB        = 0xE12;
_PORTBbits    = 0xE12;
 LATB         = 0xE14;
_LATB         = 0xE14;
_LATBbits     = 0xE14;
 ODCB         = 0xE16;
_ODCB         = 0xE16;
_ODCBbits     = 0xE16;
 CNENB        = 0xE18;
_CNENB        = 0xE18;
_CNENBbits    = 0xE18;
 CNPUB        = 0xE1A;
_CNPUB        = 0xE1A;
_CNPUBbits    = 0xE1A;
 CNPDB        = 0xE1C;
_CNPDB        = 0xE1C;
_CNPDBbits    = 0xE1C;
 ANSELB       = 0xE1E;
_ANSELB       = 0xE1E;
_ANSELBbits   = 0xE1E;
/*
** ======= Base Addresses for Various Peripherals and ACC ======
*/

 ACCA         = 0x22;
_ACCA         = 0x22;
 ACCB         = 0x28;
_ACCB         = 0x28;
 IC1          = 0x144;
_IC1          = 0x144;
 OC1          = 0x904;
_OC1          = 0x904;
 SPI1         = 0x240;
_SPI1         = 0x240;
 UART1        = 0x220;
_UART1        = 0x220;
