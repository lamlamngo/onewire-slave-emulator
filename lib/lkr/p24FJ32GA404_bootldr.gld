/* GLD file for PIC24 application using the Bully bootloader */
/*
** Linker script for PIC24FJ32GA404
*/

OUTPUT_ARCH("24FJ32GA404")
CRT0_STARTUP(crt0_extended.o)
CRT1_STARTUP(crt1_extended.o)

OPTIONAL(-lpPIC24Fxxx)

/*
** Memory Regions
*/
MEMORY
{
  data  (a!xr)   : ORIGIN = 0x800,         LENGTH = 0x2000
  reset          : ORIGIN = 0x0,           LENGTH = 0x4
  ivt            : ORIGIN = 0x4,           LENGTH = 0xFC
  _reserved      : ORIGIN = 0x100,         LENGTH = 0x4
  aivt           : ORIGIN = 0x104,         LENGTH = 0xFC
  j_ivt          : ORIGIN = 0xc00,   	   LENGTH = 0x200
  program (xr)   : ORIGIN = 0xe00,         LENGTH = 0x49f6
  CONFIG4        : ORIGIN = 0x57F8,        LENGTH = 0x2
  CONFIG3        : ORIGIN = 0x57FA,        LENGTH = 0x2
  CONFIG2        : ORIGIN = 0x57FC,        LENGTH = 0x2
  CONFIG1        : ORIGIN = 0x57FE,        LENGTH = 0x2
}
__JIVT_BASE          = 0xc00;
J__ReservedTrap0 = 0xc02;
J__OscillatorFail = 0xc06;
J__AddressError = 0xc0a;
J__StackError = 0xc0e;
J__MathError = 0xc12;
J__ReservedTrap5 = 0xc16;
J__ReservedTrap6 = 0xc1a;
J__ReservedTrap7 = 0xc1e;
J__INT0Interrupt = 0xc22;
J__IC1Interrupt = 0xc26;
J__OC1Interrupt = 0xc2a;
J__T1Interrupt = 0xc2e;
J__DMA0Interrupt = 0xc32;
J__IC2Interrupt = 0xc36;
J__OC2Interrupt = 0xc3a;
J__T2Interrupt = 0xc3e;
J__T3Interrupt = 0xc42;
J__SPI1ErrInterrupt = 0xc46;
J__SPI1Interrupt = 0xc4a;
J__U1RXInterrupt = 0xc4e;
J__U1TXInterrupt = 0xc52;
J__ADC1Interrupt = 0xc56;
J__DMA1Interrupt = 0xc5a;
J__Interrupt15 = 0xc5e;
J__SI2C1Interrupt = 0xc62;
J__MI2C1Interrupt = 0xc66;
J__CompInterrupt = 0xc6a;
J__CNInterrupt = 0xc6e;
J__INT1Interrupt = 0xc72;
J__Interrupt21 = 0xc76;
J__Interrupt22 = 0xc7a;
J__Interrupt23 = 0xc7e;
J__DMA2Interrupt = 0xc82;
J__OC3Interrupt = 0xc86;
J__OC4Interrupt = 0xc8a;
J__T4Interrupt = 0xc8e;
J__T5Interrupt = 0xc92;
J__INT2Interrupt = 0xc96;
J__U2RXInterrupt = 0xc9a;
J__U2TXInterrupt = 0xc9e;
J__SPI2ErrInterrupt = 0xca2;
J__SPI2Interrupt = 0xca6;
J__Interrupt34 = 0xcaa;
J__Interrupt35 = 0xcae;
J__DMA3Interrupt = 0xcb2;
J__IC3Interrupt = 0xcb6;
J__IC4Interrupt = 0xcba;
J__IC5Interrupt = 0xcbe;
J__IC6Interrupt = 0xcc2;
J__OC5Interrupt = 0xcc6;
J__OC6Interrupt = 0xcca;
J__Interrupt43 = 0xcce;
J__Interrupt44 = 0xcd2;
J__PMPInterrupt = 0xcd6;
J__DMA4Interrupt = 0xcda;
J__Interrupt47 = 0xcde;
J__Interrupt48 = 0xce2;
J__SI2C2Interrupt = 0xce6;
J__MI2C2Interrupt = 0xcea;
J__Interrupt51 = 0xcee;
J__Interrupt52 = 0xcf2;
J__INT3Interrupt = 0xcf6;
J__INT4Interrupt = 0xcfa;
J__CRYPTOInterrupt = 0xcfe;
J__CRYPTOKeyInterrupt = 0xd02;
J__Interrupt57 = 0xd06;
J__spi1_rx_done = 0xd0a;
J__spi2_rx_done = 0xd0e;
J__spi3_rx_done = 0xd12;
J__DMA5Interrupt = 0xd16;
J__RTCCInterrupt = 0xd1a;
J__Interrupt63 = 0xd1e;
J__Interrupt64 = 0xd22;
J__U1ErrInterrupt = 0xd26;
J__U2ErrInterrupt = 0xd2a;
J__CRCInterrupt = 0xd2e;
J__Interrupt68 = 0xd32;
J__Interrupt69 = 0xd36;
J__Interrupt70 = 0xd3a;
J__Interrupt71 = 0xd3e;
J__LVDInterrupt = 0xd42;
J__Interrupt73 = 0xd46;
J__Interrupt74 = 0xd4a;
J__Interrupt75 = 0xd4e;
J__Interrupt76 = 0xd52;
J__CTMUInterrupt = 0xd56;
J__Interrupt78 = 0xd5a;
J__Interrupt79 = 0xd5e;
J__Interrupt80 = 0xd62;
J__U3ErrInterrupt = 0xd66;
J__U3RXInterrupt = 0xd6a;
J__U3TXInterrupt = 0xd6e;
J__Interrupt84 = 0xd72;
J__Interrupt85 = 0xd76;
J__USB1Interrupt = 0xd7a;
J__U4ErrInterrupt = 0xd7e;
J__U4RXInterrupt = 0xd82;
J__U4TXInterrupt = 0xd86;
J__SPI3ErrInterrupt = 0xd8a;
J__SPI3Interrupt = 0xd8e;
J__Interrupt92 = 0xd92;
J__Interrupt93 = 0xd96;
J__Interrupt94 = 0xd9a;
J__Interrupt95 = 0xd9e;
J__Interrupt96 = 0xda2;
J__Interrupt97 = 0xda6;
J__Interrupt98 = 0xdaa;
J__Interrupt99 = 0xdae;
J__Interrupt100 = 0xdb2;
J__Interrupt101 = 0xdb6;
J__Interrupt102 = 0xdba;
J__Interrupt103 = 0xdbe;
J__Interrupt104 = 0xdc2;
J__Interrupt105 = 0xdc6;
J__FSTInterrupt = 0xdca;
J__Interrupt107 = 0xdce;
J__Interrupt108 = 0xdd2;
J__Interrupt109 = 0xdd6;
J__Interrupt110 = 0xdda;
J__Interrupt111 = 0xdde;
J__Interrupt112 = 0xde2;
J__Interrupt113 = 0xde6;
J__Interrupt114 = 0xdea;
J__Interrupt115 = 0xdee;
J__Interrupt116 = 0xdf2;
J__JTAGInterrupt = 0xdf6;

__CONFIG4 = 0x57F8;
__CONFIG3 = 0x57FA;
__CONFIG2 = 0x57FC;
__CONFIG1 = 0x57FE;

__NO_HANDLES = 1;          /* Suppress handles on this device  */

__IVT_BASE  = 0x4;
__AIVT_BASE = 0x104;
__DATA_BASE = 0x800;
__DATA_LENGTH = 0x2000;
__CODE_BASE = 0x200;
__CODE_LENGTH = 0x55F8;


/*
** ==================== Section Map ======================
*/
SECTIONS
{
  /*
  ** ========== Program Memory ==========
  */


  /*
  ** Reset Instruction
  */
  .reset :
  {
        SHORT(ABSOLUTE(__reset));
        SHORT(0x04);
        SHORT((ABSOLUTE(__reset) >> 16) & 0x7F);
        SHORT(0);
  } >reset


  /*
  ** Interrupt Vector Tables
  **
  ** The primary and alternate tables are loaded
  ** here, between sections .reset and .text.
  ** Vector table source code appears below.
  */
.j_ivt __JIVT_BASE :
 {
 SHORT(0x02);  /* timeout value */
 SHORT(0x00);
    SHORT(DEFINED(__ReservedTrap0) ? ABSOLUTE(__ReservedTrap0) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap0) ? ABSOLUTE(__ReservedTrap0) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OscillatorFail) ? ABSOLUTE(__OscillatorFail) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OscillatorFail) ? ABSOLUTE(__OscillatorFail) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__AddressError) ? ABSOLUTE(__AddressError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__AddressError) ? ABSOLUTE(__AddressError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__StackError) ? ABSOLUTE(__StackError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__StackError) ? ABSOLUTE(__StackError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__MathError) ? ABSOLUTE(__MathError) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__MathError) ? ABSOLUTE(__MathError) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ReservedTrap5) ? ABSOLUTE(__ReservedTrap5) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap5) ? ABSOLUTE(__ReservedTrap5) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ReservedTrap6) ? ABSOLUTE(__ReservedTrap6) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap6) ? ABSOLUTE(__ReservedTrap6) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ReservedTrap7) ? ABSOLUTE(__ReservedTrap7) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ReservedTrap7) ? ABSOLUTE(__ReservedTrap7) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT0Interrupt) ? ABSOLUTE(__INT0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT0Interrupt) ? ABSOLUTE(__INT0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC1Interrupt) ? ABSOLUTE(__IC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC1Interrupt) ? ABSOLUTE(__IC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC1Interrupt) ? ABSOLUTE(__OC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC1Interrupt) ? ABSOLUTE(__OC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T1Interrupt) ? ABSOLUTE(__T1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T1Interrupt) ? ABSOLUTE(__T1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA0Interrupt) ? ABSOLUTE(__DMA0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA0Interrupt) ? ABSOLUTE(__DMA0Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC2Interrupt) ? ABSOLUTE(__IC2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC2Interrupt) ? ABSOLUTE(__IC2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC2Interrupt) ? ABSOLUTE(__OC2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC2Interrupt) ? ABSOLUTE(__OC2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T2Interrupt) ? ABSOLUTE(__T2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T2Interrupt) ? ABSOLUTE(__T2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T3Interrupt) ? ABSOLUTE(__T3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T3Interrupt) ? ABSOLUTE(__T3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI1ErrInterrupt) ? ABSOLUTE(__SPI1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI1ErrInterrupt) ? ABSOLUTE(__SPI1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI1Interrupt) ? ABSOLUTE(__SPI1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI1Interrupt) ? ABSOLUTE(__SPI1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1RXInterrupt) ? ABSOLUTE(__U1RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1RXInterrupt) ? ABSOLUTE(__U1RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1TXInterrupt) ? ABSOLUTE(__U1TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1TXInterrupt) ? ABSOLUTE(__U1TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__ADC1Interrupt) ? ABSOLUTE(__ADC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__ADC1Interrupt) ? ABSOLUTE(__ADC1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA1Interrupt) ? ABSOLUTE(__DMA1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA1Interrupt) ? ABSOLUTE(__DMA1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt15) ? ABSOLUTE(__Interrupt15) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt15) ? ABSOLUTE(__Interrupt15) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SI2C1Interrupt) ? ABSOLUTE(__SI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SI2C1Interrupt) ? ABSOLUTE(__SI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__MI2C1Interrupt) ? ABSOLUTE(__MI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__MI2C1Interrupt) ? ABSOLUTE(__MI2C1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CompInterrupt) ? ABSOLUTE(__CompInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CompInterrupt) ? ABSOLUTE(__CompInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CNInterrupt) ? ABSOLUTE(__CNInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CNInterrupt) ? ABSOLUTE(__CNInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT1Interrupt) ? ABSOLUTE(__INT1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT1Interrupt) ? ABSOLUTE(__INT1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt21) ? ABSOLUTE(__Interrupt21) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt21) ? ABSOLUTE(__Interrupt21) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt22) ? ABSOLUTE(__Interrupt22) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt22) ? ABSOLUTE(__Interrupt22) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt23) ? ABSOLUTE(__Interrupt23) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt23) ? ABSOLUTE(__Interrupt23) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA2Interrupt) ? ABSOLUTE(__DMA2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA2Interrupt) ? ABSOLUTE(__DMA2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC3Interrupt) ? ABSOLUTE(__OC3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC3Interrupt) ? ABSOLUTE(__OC3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC4Interrupt) ? ABSOLUTE(__OC4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC4Interrupt) ? ABSOLUTE(__OC4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T4Interrupt) ? ABSOLUTE(__T4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T4Interrupt) ? ABSOLUTE(__T4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__T5Interrupt) ? ABSOLUTE(__T5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__T5Interrupt) ? ABSOLUTE(__T5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT2Interrupt) ? ABSOLUTE(__INT2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT2Interrupt) ? ABSOLUTE(__INT2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U2RXInterrupt) ? ABSOLUTE(__U2RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U2RXInterrupt) ? ABSOLUTE(__U2RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U2TXInterrupt) ? ABSOLUTE(__U2TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U2TXInterrupt) ? ABSOLUTE(__U2TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI2ErrInterrupt) ? ABSOLUTE(__SPI2ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI2ErrInterrupt) ? ABSOLUTE(__SPI2ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI2Interrupt) ? ABSOLUTE(__SPI2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI2Interrupt) ? ABSOLUTE(__SPI2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt34) ? ABSOLUTE(__Interrupt34) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt34) ? ABSOLUTE(__Interrupt34) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt35) ? ABSOLUTE(__Interrupt35) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt35) ? ABSOLUTE(__Interrupt35) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA3Interrupt) ? ABSOLUTE(__DMA3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA3Interrupt) ? ABSOLUTE(__DMA3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC3Interrupt) ? ABSOLUTE(__IC3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC3Interrupt) ? ABSOLUTE(__IC3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC4Interrupt) ? ABSOLUTE(__IC4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC4Interrupt) ? ABSOLUTE(__IC4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC5Interrupt) ? ABSOLUTE(__IC5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC5Interrupt) ? ABSOLUTE(__IC5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__IC6Interrupt) ? ABSOLUTE(__IC6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__IC6Interrupt) ? ABSOLUTE(__IC6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC5Interrupt) ? ABSOLUTE(__OC5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC5Interrupt) ? ABSOLUTE(__OC5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__OC6Interrupt) ? ABSOLUTE(__OC6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__OC6Interrupt) ? ABSOLUTE(__OC6Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt43) ? ABSOLUTE(__Interrupt43) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt43) ? ABSOLUTE(__Interrupt43) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt44) ? ABSOLUTE(__Interrupt44) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt44) ? ABSOLUTE(__Interrupt44) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__PMPInterrupt) ? ABSOLUTE(__PMPInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__PMPInterrupt) ? ABSOLUTE(__PMPInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA4Interrupt) ? ABSOLUTE(__DMA4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA4Interrupt) ? ABSOLUTE(__DMA4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt47) ? ABSOLUTE(__Interrupt47) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt47) ? ABSOLUTE(__Interrupt47) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt48) ? ABSOLUTE(__Interrupt48) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt48) ? ABSOLUTE(__Interrupt48) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SI2C2Interrupt) ? ABSOLUTE(__SI2C2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SI2C2Interrupt) ? ABSOLUTE(__SI2C2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__MI2C2Interrupt) ? ABSOLUTE(__MI2C2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__MI2C2Interrupt) ? ABSOLUTE(__MI2C2Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt51) ? ABSOLUTE(__Interrupt51) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt51) ? ABSOLUTE(__Interrupt51) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt52) ? ABSOLUTE(__Interrupt52) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt52) ? ABSOLUTE(__Interrupt52) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT3Interrupt) ? ABSOLUTE(__INT3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT3Interrupt) ? ABSOLUTE(__INT3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__INT4Interrupt) ? ABSOLUTE(__INT4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__INT4Interrupt) ? ABSOLUTE(__INT4Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CRYPTOInterrupt) ? ABSOLUTE(__CRYPTOInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CRYPTOInterrupt) ? ABSOLUTE(__CRYPTOInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CRYPTOKeyInterrupt) ? ABSOLUTE(__CRYPTOKeyInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CRYPTOKeyInterrupt) ? ABSOLUTE(__CRYPTOKeyInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt57) ? ABSOLUTE(__Interrupt57) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt57) ? ABSOLUTE(__Interrupt57) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__spi1_rx_done) ? ABSOLUTE(__spi1_rx_done) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__spi1_rx_done) ? ABSOLUTE(__spi1_rx_done) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__spi2_rx_done) ? ABSOLUTE(__spi2_rx_done) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__spi2_rx_done) ? ABSOLUTE(__spi2_rx_done) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__spi3_rx_done) ? ABSOLUTE(__spi3_rx_done) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__spi3_rx_done) ? ABSOLUTE(__spi3_rx_done) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__DMA5Interrupt) ? ABSOLUTE(__DMA5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__DMA5Interrupt) ? ABSOLUTE(__DMA5Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__RTCCInterrupt) ? ABSOLUTE(__RTCCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__RTCCInterrupt) ? ABSOLUTE(__RTCCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt63) ? ABSOLUTE(__Interrupt63) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt63) ? ABSOLUTE(__Interrupt63) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt64) ? ABSOLUTE(__Interrupt64) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt64) ? ABSOLUTE(__Interrupt64) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U1ErrInterrupt) ? ABSOLUTE(__U1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U1ErrInterrupt) ? ABSOLUTE(__U1ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U2ErrInterrupt) ? ABSOLUTE(__U2ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U2ErrInterrupt) ? ABSOLUTE(__U2ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CRCInterrupt) ? ABSOLUTE(__CRCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CRCInterrupt) ? ABSOLUTE(__CRCInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt68) ? ABSOLUTE(__Interrupt68) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt68) ? ABSOLUTE(__Interrupt68) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt69) ? ABSOLUTE(__Interrupt69) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt69) ? ABSOLUTE(__Interrupt69) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt70) ? ABSOLUTE(__Interrupt70) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt70) ? ABSOLUTE(__Interrupt70) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt71) ? ABSOLUTE(__Interrupt71) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt71) ? ABSOLUTE(__Interrupt71) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__LVDInterrupt) ? ABSOLUTE(__LVDInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__LVDInterrupt) ? ABSOLUTE(__LVDInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt73) ? ABSOLUTE(__Interrupt73) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt73) ? ABSOLUTE(__Interrupt73) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt74) ? ABSOLUTE(__Interrupt74) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt74) ? ABSOLUTE(__Interrupt74) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt75) ? ABSOLUTE(__Interrupt75) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt75) ? ABSOLUTE(__Interrupt75) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt76) ? ABSOLUTE(__Interrupt76) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt76) ? ABSOLUTE(__Interrupt76) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__CTMUInterrupt) ? ABSOLUTE(__CTMUInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__CTMUInterrupt) ? ABSOLUTE(__CTMUInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt78) ? ABSOLUTE(__Interrupt78) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt78) ? ABSOLUTE(__Interrupt78) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt79) ? ABSOLUTE(__Interrupt79) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt79) ? ABSOLUTE(__Interrupt79) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt80) ? ABSOLUTE(__Interrupt80) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt80) ? ABSOLUTE(__Interrupt80) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U3ErrInterrupt) ? ABSOLUTE(__U3ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U3ErrInterrupt) ? ABSOLUTE(__U3ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U3RXInterrupt) ? ABSOLUTE(__U3RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U3RXInterrupt) ? ABSOLUTE(__U3RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U3TXInterrupt) ? ABSOLUTE(__U3TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U3TXInterrupt) ? ABSOLUTE(__U3TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt84) ? ABSOLUTE(__Interrupt84) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt84) ? ABSOLUTE(__Interrupt84) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt85) ? ABSOLUTE(__Interrupt85) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt85) ? ABSOLUTE(__Interrupt85) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__USB1Interrupt) ? ABSOLUTE(__USB1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__USB1Interrupt) ? ABSOLUTE(__USB1Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U4ErrInterrupt) ? ABSOLUTE(__U4ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U4ErrInterrupt) ? ABSOLUTE(__U4ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U4RXInterrupt) ? ABSOLUTE(__U4RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U4RXInterrupt) ? ABSOLUTE(__U4RXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__U4TXInterrupt) ? ABSOLUTE(__U4TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__U4TXInterrupt) ? ABSOLUTE(__U4TXInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI3ErrInterrupt) ? ABSOLUTE(__SPI3ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI3ErrInterrupt) ? ABSOLUTE(__SPI3ErrInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__SPI3Interrupt) ? ABSOLUTE(__SPI3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__SPI3Interrupt) ? ABSOLUTE(__SPI3Interrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt92) ? ABSOLUTE(__Interrupt92) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt92) ? ABSOLUTE(__Interrupt92) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt93) ? ABSOLUTE(__Interrupt93) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt93) ? ABSOLUTE(__Interrupt93) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt94) ? ABSOLUTE(__Interrupt94) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt94) ? ABSOLUTE(__Interrupt94) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt95) ? ABSOLUTE(__Interrupt95) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt95) ? ABSOLUTE(__Interrupt95) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt96) ? ABSOLUTE(__Interrupt96) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt96) ? ABSOLUTE(__Interrupt96) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt97) ? ABSOLUTE(__Interrupt97) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt97) ? ABSOLUTE(__Interrupt97) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt98) ? ABSOLUTE(__Interrupt98) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt98) ? ABSOLUTE(__Interrupt98) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt99) ? ABSOLUTE(__Interrupt99) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt99) ? ABSOLUTE(__Interrupt99) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt100) ? ABSOLUTE(__Interrupt100) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt100) ? ABSOLUTE(__Interrupt100) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt101) ? ABSOLUTE(__Interrupt101) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt101) ? ABSOLUTE(__Interrupt101) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt102) ? ABSOLUTE(__Interrupt102) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt102) ? ABSOLUTE(__Interrupt102) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt103) ? ABSOLUTE(__Interrupt103) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt103) ? ABSOLUTE(__Interrupt103) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt104) ? ABSOLUTE(__Interrupt104) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt104) ? ABSOLUTE(__Interrupt104) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt105) ? ABSOLUTE(__Interrupt105) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt105) ? ABSOLUTE(__Interrupt105) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__FSTInterrupt) ? ABSOLUTE(__FSTInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__FSTInterrupt) ? ABSOLUTE(__FSTInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt107) ? ABSOLUTE(__Interrupt107) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt107) ? ABSOLUTE(__Interrupt107) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt108) ? ABSOLUTE(__Interrupt108) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt108) ? ABSOLUTE(__Interrupt108) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt109) ? ABSOLUTE(__Interrupt109) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt109) ? ABSOLUTE(__Interrupt109) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt110) ? ABSOLUTE(__Interrupt110) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt110) ? ABSOLUTE(__Interrupt110) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt111) ? ABSOLUTE(__Interrupt111) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt111) ? ABSOLUTE(__Interrupt111) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt112) ? ABSOLUTE(__Interrupt112) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt112) ? ABSOLUTE(__Interrupt112) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt113) ? ABSOLUTE(__Interrupt113) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt113) ? ABSOLUTE(__Interrupt113) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt114) ? ABSOLUTE(__Interrupt114) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt114) ? ABSOLUTE(__Interrupt114) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt115) ? ABSOLUTE(__Interrupt115) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt115) ? ABSOLUTE(__Interrupt115) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__Interrupt116) ? ABSOLUTE(__Interrupt116) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__Interrupt116) ? ABSOLUTE(__Interrupt116) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

    SHORT(DEFINED(__JTAGInterrupt) ? ABSOLUTE(__JTAGInterrupt) : 
     ABSOLUTE(__DefaultInterrupt));
     SHORT(0x04);
    SHORT(((DEFINED(__JTAGInterrupt) ? ABSOLUTE(__JTAGInterrupt) : 
     ABSOLUTE(__DefaultInterrupt)) >> 16) & 0x7F);
     SHORT(0);

 } >j_ivt


  /*
  ** User Code and Library Code
  **
  ** This section must not be assigned to __CODE_BASE,
  ** because CodeGuard(tm) sections may be located there.
  **
  ** Note that input sections *(.text) are not mapped here.
  ** The best-fit allocator locates them, so that .text
  ** may flow around PSV sections as needed.
  */
  .text :
  {
        *(.init);
        *(.user_init);
        KEEP (*(.handle));
        KEEP (*(.isr*));
        *(.libc) *(.libm) *(.libdsp);  /* keep together in this order */
        *(.lib*);
  } >program


  /*
  ** User-Defined Section in Program Memory
  **
  ** note: can specify an address using
  **       the following syntax:
  **
  **       usercode 0x1234 :
  **         {
  **           *(usercode);
  **         } >program
  */
  usercode :
  {
        *(usercode);
  } >program


  /*
  ** User-Defined Constants in Program Memory
  **
  ** For PSV type sections, the Load Memory Address (LMA)
  ** should be specified as follows:
  **
  **       userconst : AT(0x1234)
  **         {
  **           *(userconst);
  **         } >program
  **
  ** Note that mapping PSV sections in linker scripts
  ** is not generally recommended.
  **
  ** Because of page alignment restrictions, memory is
  ** often used more efficiently when PSV sections
  ** do not appear in the linker script.
  **
  ** For more information on memory allocation,
  ** please refer to chapter 10, 'Linker Processing'
  ** in the Assembler, Linker manual (DS51317).
  */


  /*
  ** Configuration Words
  */
  __CONFIG4 :
  { KEEP (*(__CONFIG4.sec*))    } >CONFIG4
  __CONFIG3 :
  { KEEP (*(__CONFIG3.sec*))    } >CONFIG3
  __CONFIG2 :
  { KEEP (*(__CONFIG2.sec*))    } >CONFIG2
  __CONFIG1 :
  { KEEP (*(__CONFIG1.sec*))    } >CONFIG1


  /*
  ** =========== Data Memory ===========
  */


  /*
  ** ICD Debug Exec
  **
  ** This section provides optional storage for
  ** the ICD2 debugger. Define a global symbol
  ** named __ICD2RAM to enable ICD2. This section
  ** must be loaded at data address 0x800.
  */
  .icd __DATA_BASE (NOLOAD):
  {
    . += (DEFINED (__ICD2RAM) ? 0x50 : 0 );
  } > data


  /*
  ** Other sections in data memory are not explicitly mapped.
  ** Instead they are allocated according to their section
  ** attributes, which is most efficient.
  ** 
  ** If a specific arrangement of sections is required
  ** (other than what can be achieved using attributes)
  ** additional sections may be defined here. See chapter
  ** 10.5 in the MPLAB ASM30/LINK30 User's Guide (DS51317)
  ** for more information.
  */


  /*
  ** ========== Debug Info ==============
  */

  .comment        0 : { *(.comment) }

  /*
  ** DWARF-2
  */
  .debug_info     0 : { *(.debug_info) *(.gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  .debug_ranges   0 : { *(.debug_ranges) }
  .debug_aranges  0 : { *(.debug_aranges) }

} /* SECTIONS */

/*
** ================= End of Section Map ================
*/

/*
** Section Map for Interrupt Vector Tables
*/
SECTIONS
{

/*
** Interrupt Vector Table
*/
.ivt __IVT_BASE :
{
LONG(J__ReservedTrap0);
LONG(J__OscillatorFail);
LONG(J__AddressError);
LONG(J__StackError);
LONG(J__MathError);
LONG(J__ReservedTrap5);
LONG(J__ReservedTrap6);
LONG(J__ReservedTrap7);
LONG(J__INT0Interrupt);
LONG(J__IC1Interrupt);
LONG(J__OC1Interrupt);
LONG(J__T1Interrupt);
LONG(J__DMA0Interrupt);
LONG(J__IC2Interrupt);
LONG(J__OC2Interrupt);
LONG(J__T2Interrupt);
LONG(J__T3Interrupt);
LONG(J__SPI1ErrInterrupt);
LONG(J__SPI1Interrupt);
LONG(J__U1RXInterrupt);
LONG(J__U1TXInterrupt);
LONG(J__ADC1Interrupt);
LONG(J__DMA1Interrupt);
LONG(J__Interrupt15);
LONG(J__SI2C1Interrupt);
LONG(J__MI2C1Interrupt);
LONG(J__CompInterrupt);
LONG(J__CNInterrupt);
LONG(J__INT1Interrupt);
LONG(J__Interrupt21);
LONG(J__Interrupt22);
LONG(J__Interrupt23);
LONG(J__DMA2Interrupt);
LONG(J__OC3Interrupt);
LONG(J__OC4Interrupt);
LONG(J__T4Interrupt);
LONG(J__T5Interrupt);
LONG(J__INT2Interrupt);
LONG(J__U2RXInterrupt);
LONG(J__U2TXInterrupt);
LONG(J__SPI2ErrInterrupt);
LONG(J__SPI2Interrupt);
LONG(J__Interrupt34);
LONG(J__Interrupt35);
LONG(J__DMA3Interrupt);
LONG(J__IC3Interrupt);
LONG(J__IC4Interrupt);
LONG(J__IC5Interrupt);
LONG(J__IC6Interrupt);
LONG(J__OC5Interrupt);
LONG(J__OC6Interrupt);
LONG(J__Interrupt43);
LONG(J__Interrupt44);
LONG(J__PMPInterrupt);
LONG(J__DMA4Interrupt);
LONG(J__Interrupt47);
LONG(J__Interrupt48);
LONG(J__SI2C2Interrupt);
LONG(J__MI2C2Interrupt);
LONG(J__Interrupt51);
LONG(J__Interrupt52);
LONG(J__INT3Interrupt);
LONG(J__INT4Interrupt);
LONG(J__CRYPTOInterrupt);
LONG(J__CRYPTOKeyInterrupt);
LONG(J__Interrupt57);
LONG(J__spi1_rx_done);
LONG(J__spi2_rx_done);
LONG(J__spi3_rx_done);
LONG(J__DMA5Interrupt);
LONG(J__RTCCInterrupt);
LONG(J__Interrupt63);
LONG(J__Interrupt64);
LONG(J__U1ErrInterrupt);
LONG(J__U2ErrInterrupt);
LONG(J__CRCInterrupt);
LONG(J__Interrupt68);
LONG(J__Interrupt69);
LONG(J__Interrupt70);
LONG(J__Interrupt71);
LONG(J__LVDInterrupt);
LONG(J__Interrupt73);
LONG(J__Interrupt74);
LONG(J__Interrupt75);
LONG(J__Interrupt76);
LONG(J__CTMUInterrupt);
LONG(J__Interrupt78);
LONG(J__Interrupt79);
LONG(J__Interrupt80);
LONG(J__U3ErrInterrupt);
LONG(J__U3RXInterrupt);
LONG(J__U3TXInterrupt);
LONG(J__Interrupt84);
LONG(J__Interrupt85);
LONG(J__USB1Interrupt);
LONG(J__U4ErrInterrupt);
LONG(J__U4RXInterrupt);
LONG(J__U4TXInterrupt);
LONG(J__SPI3ErrInterrupt);
LONG(J__SPI3Interrupt);
LONG(J__Interrupt92);
LONG(J__Interrupt93);
LONG(J__Interrupt94);
LONG(J__Interrupt95);
LONG(J__Interrupt96);
LONG(J__Interrupt97);
LONG(J__Interrupt98);
LONG(J__Interrupt99);
LONG(J__Interrupt100);
LONG(J__Interrupt101);
LONG(J__Interrupt102);
LONG(J__Interrupt103);
LONG(J__Interrupt104);
LONG(J__Interrupt105);
LONG(J__FSTInterrupt);
LONG(J__Interrupt107);
LONG(J__Interrupt108);
LONG(J__Interrupt109);
LONG(J__Interrupt110);
LONG(J__Interrupt111);
LONG(J__Interrupt112);
LONG(J__Interrupt113);
LONG(J__Interrupt114);
LONG(J__Interrupt115);
LONG(J__Interrupt116);
LONG(J__JTAGInterrupt);
  } >ivt


/*
** Alternate Interrupt Vector Table
*/
.aivt __AIVT_BASE :
{
LONG(J__ReservedTrap0);
LONG(J__OscillatorFail);
LONG(J__AddressError);
LONG(J__StackError);
LONG(J__MathError);
LONG(J__ReservedTrap5);
LONG(J__ReservedTrap6);
LONG(J__ReservedTrap7);
LONG(J__INT0Interrupt);
LONG(J__IC1Interrupt);
LONG(J__OC1Interrupt);
LONG(J__T1Interrupt);
LONG(J__DMA0Interrupt);
LONG(J__IC2Interrupt);
LONG(J__OC2Interrupt);
LONG(J__T2Interrupt);
LONG(J__T3Interrupt);
LONG(J__SPI1ErrInterrupt);
LONG(J__SPI1Interrupt);
LONG(J__U1RXInterrupt);
LONG(J__U1TXInterrupt);
LONG(J__ADC1Interrupt);
LONG(J__DMA1Interrupt);
LONG(J__Interrupt15);
LONG(J__SI2C1Interrupt);
LONG(J__MI2C1Interrupt);
LONG(J__CompInterrupt);
LONG(J__CNInterrupt);
LONG(J__INT1Interrupt);
LONG(J__Interrupt21);
LONG(J__Interrupt22);
LONG(J__Interrupt23);
LONG(J__DMA2Interrupt);
LONG(J__OC3Interrupt);
LONG(J__OC4Interrupt);
LONG(J__T4Interrupt);
LONG(J__T5Interrupt);
LONG(J__INT2Interrupt);
LONG(J__U2RXInterrupt);
LONG(J__U2TXInterrupt);
LONG(J__SPI2ErrInterrupt);
LONG(J__SPI2Interrupt);
LONG(J__Interrupt34);
LONG(J__Interrupt35);
LONG(J__DMA3Interrupt);
LONG(J__IC3Interrupt);
LONG(J__IC4Interrupt);
LONG(J__IC5Interrupt);
LONG(J__IC6Interrupt);
LONG(J__OC5Interrupt);
LONG(J__OC6Interrupt);
LONG(J__Interrupt43);
LONG(J__Interrupt44);
LONG(J__PMPInterrupt);
LONG(J__DMA4Interrupt);
LONG(J__Interrupt47);
LONG(J__Interrupt48);
LONG(J__SI2C2Interrupt);
LONG(J__MI2C2Interrupt);
LONG(J__Interrupt51);
LONG(J__Interrupt52);
LONG(J__INT3Interrupt);
LONG(J__INT4Interrupt);
LONG(J__CRYPTOInterrupt);
LONG(J__CRYPTOKeyInterrupt);
LONG(J__Interrupt57);
LONG(J__spi1_rx_done);
LONG(J__spi2_rx_done);
LONG(J__spi3_rx_done);
LONG(J__DMA5Interrupt);
LONG(J__RTCCInterrupt);
LONG(J__Interrupt63);
LONG(J__Interrupt64);
LONG(J__U1ErrInterrupt);
LONG(J__U2ErrInterrupt);
LONG(J__CRCInterrupt);
LONG(J__Interrupt68);
LONG(J__Interrupt69);
LONG(J__Interrupt70);
LONG(J__Interrupt71);
LONG(J__LVDInterrupt);
LONG(J__Interrupt73);
LONG(J__Interrupt74);
LONG(J__Interrupt75);
LONG(J__Interrupt76);
LONG(J__CTMUInterrupt);
LONG(J__Interrupt78);
LONG(J__Interrupt79);
LONG(J__Interrupt80);
LONG(J__U3ErrInterrupt);
LONG(J__U3RXInterrupt);
LONG(J__U3TXInterrupt);
LONG(J__Interrupt84);
LONG(J__Interrupt85);
LONG(J__USB1Interrupt);
LONG(J__U4ErrInterrupt);
LONG(J__U4RXInterrupt);
LONG(J__U4TXInterrupt);
LONG(J__SPI3ErrInterrupt);
LONG(J__SPI3Interrupt);
LONG(J__Interrupt92);
LONG(J__Interrupt93);
LONG(J__Interrupt94);
LONG(J__Interrupt95);
LONG(J__Interrupt96);
LONG(J__Interrupt97);
LONG(J__Interrupt98);
LONG(J__Interrupt99);
LONG(J__Interrupt100);
LONG(J__Interrupt101);
LONG(J__Interrupt102);
LONG(J__Interrupt103);
LONG(J__Interrupt104);
LONG(J__Interrupt105);
LONG(J__FSTInterrupt);
LONG(J__Interrupt107);
LONG(J__Interrupt108);
LONG(J__Interrupt109);
LONG(J__Interrupt110);
LONG(J__Interrupt111);
LONG(J__Interrupt112);
LONG(J__Interrupt113);
LONG(J__Interrupt114);
LONG(J__Interrupt115);
LONG(J__Interrupt116);
LONG(J__JTAGInterrupt);
  } >aivt
} /* SECTIONS */


/*
** ============== Equates for SFR Addresses =============
*/

 WREG0        = 0x0;
_WREG0        = 0x0;
 WREG1        = 0x2;
_WREG1        = 0x2;
 WREG2        = 0x4;
_WREG2        = 0x4;
 WREG3        = 0x6;
_WREG3        = 0x6;
 WREG4        = 0x8;
_WREG4        = 0x8;
 WREG5        = 0xA;
_WREG5        = 0xA;
 WREG6        = 0xC;
_WREG6        = 0xC;
 WREG7        = 0xE;
_WREG7        = 0xE;
 WREG8        = 0x10;
_WREG8        = 0x10;
 WREG9        = 0x12;
_WREG9        = 0x12;
 WREG10       = 0x14;
_WREG10       = 0x14;
 WREG11       = 0x16;
_WREG11       = 0x16;
 WREG12       = 0x18;
_WREG12       = 0x18;
 WREG13       = 0x1A;
_WREG13       = 0x1A;
 WREG14       = 0x1C;
_WREG14       = 0x1C;
 WREG15       = 0x1E;
_WREG15       = 0x1E;
 SPLIM        = 0x20;
_SPLIM        = 0x20;
 PCL          = 0x2E;
_PCL          = 0x2E;
 PCH          = 0x30;
_PCH          = 0x30;
 DSRPAG       = 0x32;
_DSRPAG       = 0x32;
_DSRPAGbits   = 0x32;
 DSWPAG       = 0x34;
_DSWPAG       = 0x34;
_DSWPAGbits   = 0x34;
 RCOUNT       = 0x36;
_RCOUNT       = 0x36;
 SR           = 0x42;
_SR           = 0x42;
_SRbits       = 0x42;
 CORCON       = 0x44;
_CORCON       = 0x44;
_CORCONbits   = 0x44;
 DISICNT      = 0x52;
_DISICNT      = 0x52;
_DISICNTbits  = 0x52;
 TBLPAG       = 0x54;
_TBLPAG       = 0x54;
_TBLPAGbits   = 0x54;
 CNPD1        = 0x56;
_CNPD1        = 0x56;
_CNPD1bits    = 0x56;
 CNPD2        = 0x58;
_CNPD2        = 0x58;
_CNPD2bits    = 0x58;
 CNPD3        = 0x5A;
_CNPD3        = 0x5A;
_CNPD3bits    = 0x5A;
 CNEN1        = 0x62;
_CNEN1        = 0x62;
_CNEN1bits    = 0x62;
 CNEN2        = 0x64;
_CNEN2        = 0x64;
_CNEN2bits    = 0x64;
 CNEN3        = 0x66;
_CNEN3        = 0x66;
_CNEN3bits    = 0x66;
 CNPU1        = 0x6E;
_CNPU1        = 0x6E;
_CNPU1bits    = 0x6E;
 CNPU2        = 0x70;
_CNPU2        = 0x70;
_CNPU2bits    = 0x70;
 CNPU3        = 0x72;
_CNPU3        = 0x72;
_CNPU3bits    = 0x72;
 INTCON1      = 0x80;
_INTCON1      = 0x80;
_INTCON1bits  = 0x80;
 INTCON2      = 0x82;
_INTCON2      = 0x82;
_INTCON2bits  = 0x82;
 IFS0         = 0x84;
_IFS0         = 0x84;
_IFS0bits     = 0x84;
 IFS1         = 0x86;
_IFS1         = 0x86;
_IFS1bits     = 0x86;
 IFS2         = 0x88;
_IFS2         = 0x88;
_IFS2bits     = 0x88;
 IFS3         = 0x8A;
_IFS3         = 0x8A;
_IFS3bits     = 0x8A;
 IFS4         = 0x8C;
_IFS4         = 0x8C;
_IFS4bits     = 0x8C;
 IFS5         = 0x8E;
_IFS5         = 0x8E;
_IFS5bits     = 0x8E;
 IFS6         = 0x90;
_IFS6         = 0x90;
_IFS6bits     = 0x90;
 IFS7         = 0x92;
_IFS7         = 0x92;
_IFS7bits     = 0x92;
 IEC0         = 0x94;
_IEC0         = 0x94;
_IEC0bits     = 0x94;
 IEC1         = 0x96;
_IEC1         = 0x96;
_IEC1bits     = 0x96;
 IEC2         = 0x98;
_IEC2         = 0x98;
_IEC2bits     = 0x98;
 IEC3         = 0x9A;
_IEC3         = 0x9A;
_IEC3bits     = 0x9A;
 IEC4         = 0x9C;
_IEC4         = 0x9C;
_IEC4bits     = 0x9C;
 IEC5         = 0x9E;
_IEC5         = 0x9E;
_IEC5bits     = 0x9E;
 IEC6         = 0xA0;
_IEC6         = 0xA0;
_IEC6bits     = 0xA0;
 IEC7         = 0xA2;
_IEC7         = 0xA2;
_IEC7bits     = 0xA2;
 IPC0         = 0xA4;
_IPC0         = 0xA4;
_IPC0bits     = 0xA4;
 IPC1         = 0xA6;
_IPC1         = 0xA6;
_IPC1bits     = 0xA6;
 IPC2         = 0xA8;
_IPC2         = 0xA8;
_IPC2bits     = 0xA8;
 IPC3         = 0xAA;
_IPC3         = 0xAA;
_IPC3bits     = 0xAA;
 IPC4         = 0xAC;
_IPC4         = 0xAC;
_IPC4bits     = 0xAC;
 IPC5         = 0xAE;
_IPC5         = 0xAE;
_IPC5bits     = 0xAE;
 IPC6         = 0xB0;
_IPC6         = 0xB0;
_IPC6bits     = 0xB0;
 IPC7         = 0xB2;
_IPC7         = 0xB2;
_IPC7bits     = 0xB2;
 IPC8         = 0xB4;
_IPC8         = 0xB4;
_IPC8bits     = 0xB4;
 IPC9         = 0xB6;
_IPC9         = 0xB6;
_IPC9bits     = 0xB6;
 IPC11        = 0xBA;
_IPC11        = 0xBA;
_IPC11bits    = 0xBA;
 IPC13        = 0xBE;
_IPC13        = 0xBE;
_IPC13bits    = 0xBE;
 IPC14        = 0xC0;
_IPC14        = 0xC0;
_IPC14bits    = 0xC0;
 IPC15        = 0xC2;
_IPC15        = 0xC2;
_IPC15bits    = 0xC2;
 IPC16        = 0xC4;
_IPC16        = 0xC4;
_IPC16bits    = 0xC4;
 IPC18        = 0xC8;
_IPC18        = 0xC8;
_IPC18bits    = 0xC8;
 IPC19        = 0xCA;
_IPC19        = 0xCA;
_IPC19bits    = 0xCA;
 IPC21        = 0xCE;
_IPC21        = 0xCE;
_IPC21bits    = 0xCE;
 IPC24        = 0xD4;
_IPC24        = 0xD4;
_IPC24bits    = 0xD4;
 IPC29        = 0xDE;
_IPC29        = 0xDE;
_IPC29bits    = 0xDE;
 TMR1         = 0x100;
_TMR1         = 0x100;
 PR1          = 0x102;
_PR1          = 0x102;
 T1CON        = 0x104;
_T1CON        = 0x104;
_T1CONbits    = 0x104;
 TMR2         = 0x106;
_TMR2         = 0x106;
 TMR3HLD      = 0x108;
_TMR3HLD      = 0x108;
 TMR3         = 0x10A;
_TMR3         = 0x10A;
 PR2          = 0x10C;
_PR2          = 0x10C;
 PR3          = 0x10E;
_PR3          = 0x10E;
 T2CON        = 0x110;
_T2CON        = 0x110;
_T2CONbits    = 0x110;
 T3CON        = 0x112;
_T3CON        = 0x112;
_T3CONbits    = 0x112;
 CLC1CONL     = 0x122;
_CLC1CONL     = 0x122;
_CLC1CONLbits = 0x122;
 CLC1CONH     = 0x124;
_CLC1CONH     = 0x124;
_CLC1CONHbits = 0x124;
 CLC1SEL      = 0x126;
_CLC1SEL      = 0x126;
_CLC1SELbits  = 0x126;
 CLC1SELL     = 0x126;
_CLC1SELL     = 0x126;
_CLC1SELLbits = 0x126;
 CLC1GLSL     = 0x12A;
_CLC1GLSL     = 0x12A;
_CLC1GLSLbits = 0x12A;
 CLC1GLSH     = 0x12C;
_CLC1GLSH     = 0x12C;
_CLC1GLSHbits = 0x12C;
 CLC2CONL     = 0x12E;
_CLC2CONL     = 0x12E;
_CLC2CONLbits = 0x12E;
 CLC2CONH     = 0x130;
_CLC2CONH     = 0x130;
_CLC2CONHbits = 0x130;
 CLC2SEL      = 0x132;
_CLC2SEL      = 0x132;
_CLC2SELbits  = 0x132;
 CLC2SELL     = 0x132;
_CLC2SELL     = 0x132;
_CLC2SELLbits = 0x132;
 CLC2GLSL     = 0x136;
_CLC2GLSL     = 0x136;
_CLC2GLSLbits = 0x136;
 CLC2GLSH     = 0x138;
_CLC2GLSH     = 0x138;
_CLC2GLSHbits = 0x138;
 CCP1CON1L    = 0x140;
_CCP1CON1L    = 0x140;
_CCP1CON1Lbits = 0x140;
 CCP1CON1H    = 0x142;
_CCP1CON1H    = 0x142;
_CCP1CON1Hbits = 0x142;
 CCP1CON2L    = 0x144;
_CCP1CON2L    = 0x144;
_CCP1CON2Lbits = 0x144;
 CCP1CON2H    = 0x146;
_CCP1CON2H    = 0x146;
_CCP1CON2Hbits = 0x146;
 CCP1CON3L    = 0x148;
_CCP1CON3L    = 0x148;
_CCP1CON3Lbits = 0x148;
 CCP1CON3H    = 0x14A;
_CCP1CON3H    = 0x14A;
_CCP1CON3Hbits = 0x14A;
 CCP1STAT     = 0x14C;
_CCP1STAT     = 0x14C;
_CCP1STATbits = 0x14C;
 CCP1STATL    = 0x14C;
_CCP1STATL    = 0x14C;
_CCP1STATLbits = 0x14C;
 CCP1STATH    = 0x14E;
_CCP1STATH    = 0x14E;
 CCP1TMRL     = 0x150;
_CCP1TMRL     = 0x150;
 CCP1TMRH     = 0x152;
_CCP1TMRH     = 0x152;
 CCP1PRL      = 0x154;
_CCP1PRL      = 0x154;
 CCP1PRH      = 0x156;
_CCP1PRH      = 0x156;
 CCP1RA       = 0x158;
_CCP1RA       = 0x158;
 CCP1RAL      = 0x158;
_CCP1RAL      = 0x158;
 CCP1RAH      = 0x15A;
_CCP1RAH      = 0x15A;
 CCP1RB       = 0x15C;
_CCP1RB       = 0x15C;
 CCP1RBL      = 0x15C;
_CCP1RBL      = 0x15C;
 CCP1RBH      = 0x15E;
_CCP1RBH      = 0x15E;
 CCP1BUFL     = 0x160;
_CCP1BUFL     = 0x160;
 CCP1BUFH     = 0x162;
_CCP1BUFH     = 0x162;
 CCP2CON1L    = 0x164;
_CCP2CON1L    = 0x164;
_CCP2CON1Lbits = 0x164;
 CCP2CON1H    = 0x166;
_CCP2CON1H    = 0x166;
_CCP2CON1Hbits = 0x166;
 CCP2CON2L    = 0x168;
_CCP2CON2L    = 0x168;
_CCP2CON2Lbits = 0x168;
 CCP2CON2H    = 0x16A;
_CCP2CON2H    = 0x16A;
_CCP2CON2Hbits = 0x16A;
 CCP2CON3L    = 0x16C;
_CCP2CON3L    = 0x16C;
 CCP2CON3H    = 0x16E;
_CCP2CON3H    = 0x16E;
_CCP2CON3Hbits = 0x16E;
 CCP2STAT     = 0x170;
_CCP2STAT     = 0x170;
_CCP2STATbits = 0x170;
 CCP2STATL    = 0x170;
_CCP2STATL    = 0x170;
_CCP2STATLbits = 0x170;
 CCP2STATH    = 0x172;
_CCP2STATH    = 0x172;
 CCP2TMRL     = 0x174;
_CCP2TMRL     = 0x174;
 CCP2TMRH     = 0x176;
_CCP2TMRH     = 0x176;
 CCP2PRL      = 0x178;
_CCP2PRL      = 0x178;
 CCP2PRH      = 0x17A;
_CCP2PRH      = 0x17A;
 CCP2RA       = 0x17C;
_CCP2RA       = 0x17C;
 CCP2RAL      = 0x17C;
_CCP2RAL      = 0x17C;
 CCP2RAH      = 0x17E;
_CCP2RAH      = 0x17E;
 CCP2RB       = 0x180;
_CCP2RB       = 0x180;
 CCP2RBL      = 0x180;
_CCP2RBL      = 0x180;
 CCP2RBH      = 0x182;
_CCP2RBH      = 0x182;
 CCP2BUFL     = 0x184;
_CCP2BUFL     = 0x184;
 CCP2BUFH     = 0x186;
_CCP2BUFH     = 0x186;
 CCP3CON1L    = 0x188;
_CCP3CON1L    = 0x188;
_CCP3CON1Lbits = 0x188;
 CCP3CON1H    = 0x18A;
_CCP3CON1H    = 0x18A;
_CCP3CON1Hbits = 0x18A;
 CCP3CON2L    = 0x18C;
_CCP3CON2L    = 0x18C;
_CCP3CON2Lbits = 0x18C;
 CCP3CON2H    = 0x18E;
_CCP3CON2H    = 0x18E;
_CCP3CON2Hbits = 0x18E;
 CCP3CON3L    = 0x190;
_CCP3CON3L    = 0x190;
 CCP3CON3H    = 0x192;
_CCP3CON3H    = 0x192;
_CCP3CON3Hbits = 0x192;
 CCP3STAT     = 0x194;
_CCP3STAT     = 0x194;
_CCP3STATbits = 0x194;
 CCP3STATL    = 0x194;
_CCP3STATL    = 0x194;
_CCP3STATLbits = 0x194;
 CCP3STATH    = 0x196;
_CCP3STATH    = 0x196;
 CCP3TMRL     = 0x198;
_CCP3TMRL     = 0x198;
 CCP3TMRH     = 0x19A;
_CCP3TMRH     = 0x19A;
 CCP3PRL      = 0x19C;
_CCP3PRL      = 0x19C;
 CCP3PRH      = 0x19E;
_CCP3PRH      = 0x19E;
 CCP3RA       = 0x1A0;
_CCP3RA       = 0x1A0;
 CCP3RAL      = 0x1A0;
_CCP3RAL      = 0x1A0;
 CCP3RAH      = 0x1A2;
_CCP3RAH      = 0x1A2;
 CCP3RB       = 0x1A4;
_CCP3RB       = 0x1A4;
 CCP3RBL      = 0x1A4;
_CCP3RBL      = 0x1A4;
 CCP3RBH      = 0x1A6;
_CCP3RBH      = 0x1A6;
 CCP3BUFL     = 0x1A8;
_CCP3BUFL     = 0x1A8;
 CCP3BUFH     = 0x1AA;
_CCP3BUFH     = 0x1AA;
 I2C1RCV      = 0x200;
_I2C1RCV      = 0x200;
_I2C1RCVbits  = 0x200;
 I2C1TRN      = 0x202;
_I2C1TRN      = 0x202;
_I2C1TRNbits  = 0x202;
 I2C1BRG      = 0x204;
_I2C1BRG      = 0x204;
 I2C1CONH     = 0x206;
_I2C1CONH     = 0x206;
_I2C1CONHbits = 0x206;
 I2C1CONL     = 0x208;
_I2C1CONL     = 0x208;
_I2C1CONLbits = 0x208;
 I2C1STAT     = 0x20A;
_I2C1STAT     = 0x20A;
_I2C1STATbits = 0x20A;
 I2C1ADD      = 0x20C;
_I2C1ADD      = 0x20C;
_I2C1ADDbits  = 0x20C;
 I2C1MSK      = 0x20E;
_I2C1MSK      = 0x20E;
_I2C1MSKbits  = 0x20E;
 U1MODE       = 0x214;
_U1MODE       = 0x214;
_U1MODEbits   = 0x214;
 U1STAL       = 0x216;
_U1STAL       = 0x216;
_U1STALbits   = 0x216;
 U1TXREG      = 0x218;
_U1TXREG      = 0x218;
_U1TXREGbits  = 0x218;
 U1RXREG      = 0x21A;
_U1RXREG      = 0x21A;
 U1BRG        = 0x21C;
_U1BRG        = 0x21C;
 U1STAH       = 0x21E;
_U1STAH       = 0x21E;
_U1STAHbits   = 0x21E;
 U2MODE       = 0x22A;
_U2MODE       = 0x22A;
_U2MODEbits   = 0x22A;
 U2STAL       = 0x22C;
_U2STAL       = 0x22C;
_U2STALbits   = 0x22C;
 U2TXREG      = 0x22E;
_U2TXREG      = 0x22E;
_U2TXREGbits  = 0x22E;
 U2RXREG      = 0x230;
_U2RXREG      = 0x230;
 U2BRG        = 0x232;
_U2BRG        = 0x232;
 U2STAH       = 0x234;
_U2STAH       = 0x234;
_U2STAHbits   = 0x234;
 SPI1CON1L    = 0x240;
_SPI1CON1L    = 0x240;
_SPI1CON1Lbits = 0x240;
 SPI1CON1H    = 0x242;
_SPI1CON1H    = 0x242;
_SPI1CON1Hbits = 0x242;
 SPI1CON2L    = 0x244;
_SPI1CON2L    = 0x244;
_SPI1CON2Lbits = 0x244;
 SPI1CON2H    = 0x246;
_SPI1CON2H    = 0x246;
 SPI1STATL    = 0x248;
_SPI1STATL    = 0x248;
_SPI1STATLbits = 0x248;
 SPI1STATH    = 0x24A;
_SPI1STATH    = 0x24A;
_SPI1STATHbits = 0x24A;
 SPI1BUFL     = 0x24C;
_SPI1BUFL     = 0x24C;
 SPI1BUFH     = 0x24E;
_SPI1BUFH     = 0x24E;
 SPI1BRGL     = 0x250;
_SPI1BRGL     = 0x250;
_SPI1BRGLbits = 0x250;
 SPI1BRGH     = 0x252;
_SPI1BRGH     = 0x252;
 SPI1IMSKL    = 0x254;
_SPI1IMSKL    = 0x254;
_SPI1IMSKLbits = 0x254;
 SPI1IMSKH    = 0x256;
_SPI1IMSKH    = 0x256;
_SPI1IMSKHbits = 0x256;
 SPI1URDTL    = 0x258;
_SPI1URDTL    = 0x258;
 SPI1URDTH    = 0x25A;
_SPI1URDTH    = 0x25A;
 SPI2CON1L    = 0x260;
_SPI2CON1L    = 0x260;
_SPI2CON1Lbits = 0x260;
 SPI2CON1H    = 0x262;
_SPI2CON1H    = 0x262;
_SPI2CON1Hbits = 0x262;
 SPI2CON2L    = 0x264;
_SPI2CON2L    = 0x264;
_SPI2CON2Lbits = 0x264;
 SPI2CON2H    = 0x266;
_SPI2CON2H    = 0x266;
 SPI2STATL    = 0x268;
_SPI2STATL    = 0x268;
_SPI2STATLbits = 0x268;
 SPI2STATH    = 0x26A;
_SPI2STATH    = 0x26A;
_SPI2STATHbits = 0x26A;
 SPI2BUFL     = 0x26C;
_SPI2BUFL     = 0x26C;
 SPI2BUFH     = 0x26E;
_SPI2BUFH     = 0x26E;
 SPI2BRGL     = 0x270;
_SPI2BRGL     = 0x270;
_SPI2BRGLbits = 0x270;
 SPI2BRGH     = 0x272;
_SPI2BRGH     = 0x272;
 SPI2IMSKL    = 0x274;
_SPI2IMSKL    = 0x274;
_SPI2IMSKLbits = 0x274;
 SPI2IMSKH    = 0x276;
_SPI2IMSKH    = 0x276;
_SPI2IMSKHbits = 0x276;
 SPI2URDTL    = 0x278;
_SPI2URDTL    = 0x278;
 SPI2URDTH    = 0x27A;
_SPI2URDTH    = 0x27A;
 TRISA        = 0x2C0;
_TRISA        = 0x2C0;
_TRISAbits    = 0x2C0;
 PORTA        = 0x2C2;
_PORTA        = 0x2C2;
_PORTAbits    = 0x2C2;
 LATA         = 0x2C4;
_LATA         = 0x2C4;
_LATAbits     = 0x2C4;
 ODCA         = 0x2C6;
_ODCA         = 0x2C6;
_ODCAbits     = 0x2C6;
 TRISB        = 0x2C8;
_TRISB        = 0x2C8;
_TRISBbits    = 0x2C8;
 PORTB        = 0x2CA;
_PORTB        = 0x2CA;
_PORTBbits    = 0x2CA;
 LATB         = 0x2CC;
_LATB         = 0x2CC;
_LATBbits     = 0x2CC;
 ODCB         = 0x2CE;
_ODCB         = 0x2CE;
_ODCBbits     = 0x2CE;
 TRISC        = 0x2D0;
_TRISC        = 0x2D0;
_TRISCbits    = 0x2D0;
 PORTC        = 0x2D2;
_PORTC        = 0x2D2;
_PORTCbits    = 0x2D2;
 LATC         = 0x2D4;
_LATC         = 0x2D4;
_LATCbits     = 0x2D4;
 ODCC         = 0x2D6;
_ODCC         = 0x2D6;
_ODCCbits     = 0x2D6;
 ADC1BUF0     = 0x300;
_ADC1BUF0     = 0x300;
 ADC1BUF1     = 0x302;
_ADC1BUF1     = 0x302;
 ADC1BUF2     = 0x304;
_ADC1BUF2     = 0x304;
 ADC1BUF3     = 0x306;
_ADC1BUF3     = 0x306;
 ADC1BUF4     = 0x308;
_ADC1BUF4     = 0x308;
 ADC1BUF5     = 0x30A;
_ADC1BUF5     = 0x30A;
 ADC1BUF6     = 0x30C;
_ADC1BUF6     = 0x30C;
 ADC1BUF7     = 0x30E;
_ADC1BUF7     = 0x30E;
 ADC1BUF8     = 0x310;
_ADC1BUF8     = 0x310;
 ADC1BUF9     = 0x312;
_ADC1BUF9     = 0x312;
 ADC1BUF10    = 0x314;
_ADC1BUF10    = 0x314;
 ADC1BUF11    = 0x316;
_ADC1BUF11    = 0x316;
 ADC1BUF12    = 0x318;
_ADC1BUF12    = 0x318;
 ADC1BUF13    = 0x31A;
_ADC1BUF13    = 0x31A;
 ADC1BUF14    = 0x31C;
_ADC1BUF14    = 0x31C;
 AD1CON1      = 0x340;
_AD1CON1      = 0x340;
_AD1CON1bits  = 0x340;
 AD1CON2      = 0x342;
_AD1CON2      = 0x342;
_AD1CON2bits  = 0x342;
 AD1CON3      = 0x344;
_AD1CON3      = 0x344;
_AD1CON3bits  = 0x344;
 AD1CHS       = 0x348;
_AD1CHS       = 0x348;
_AD1CHSbits   = 0x348;
 AD1CHS0      = 0x348;
_AD1CHS0      = 0x348;
_AD1CHS0bits  = 0x348;
 AD1CSSL      = 0x350;
_AD1CSSL      = 0x350;
_AD1CSSLbits  = 0x350;
 AD1CON4      = 0x352;
_AD1CON4      = 0x352;
_AD1CON4bits  = 0x352;
 AD1CON5      = 0x354;
_AD1CON5      = 0x354;
_AD1CON5bits  = 0x354;
 AD1CHITL     = 0x358;
_AD1CHITL     = 0x358;
_AD1CHITLbits = 0x358;
 CTMUCON1L    = 0x35A;
_CTMUCON1L    = 0x35A;
_CTMUCON1Lbits = 0x35A;
 CTMUCON1H    = 0x35C;
_CTMUCON1H    = 0x35C;
_CTMUCON1Hbits = 0x35C;
 CTMUCON2     = 0x35E;
_CTMUCON2     = 0x35E;
_CTMUCON2bits = 0x35E;
 CTMUCON2L    = 0x35E;
_CTMUCON2L    = 0x35E;
_CTMUCON2Lbits = 0x35E;
 AD1CTMENL    = 0x362;
_AD1CTMENL    = 0x362;
_AD1CTMENLbits = 0x362;
 AD1RESDMA    = 0x364;
_AD1RESDMA    = 0x364;
 DMACON       = 0x380;
_DMACON       = 0x380;
_DMACONbits   = 0x380;
 DMABUF       = 0x382;
_DMABUF       = 0x382;
 DMAL         = 0x384;
_DMAL         = 0x384;
 DMAH         = 0x386;
_DMAH         = 0x386;
 DMACH0       = 0x388;
_DMACH0       = 0x388;
_DMACH0bits   = 0x388;
 DMAINT0      = 0x38A;
_DMAINT0      = 0x38A;
_DMAINT0bits  = 0x38A;
 DMASRC0      = 0x38C;
_DMASRC0      = 0x38C;
 DMADST0      = 0x38E;
_DMADST0      = 0x38E;
 DMACNT0      = 0x390;
_DMACNT0      = 0x390;
 DMACH1       = 0x392;
_DMACH1       = 0x392;
_DMACH1bits   = 0x392;
 DMAINT1      = 0x394;
_DMAINT1      = 0x394;
_DMAINT1bits  = 0x394;
 DMASRC1      = 0x396;
_DMASRC1      = 0x396;
 DMADST1      = 0x398;
_DMADST1      = 0x398;
 DMACNT1      = 0x39A;
_DMACNT1      = 0x39A;
 DMACH2       = 0x39C;
_DMACH2       = 0x39C;
_DMACH2bits   = 0x39C;
 DMAINT2      = 0x39E;
_DMAINT2      = 0x39E;
_DMAINT2bits  = 0x39E;
 DMASRC2      = 0x3A0;
_DMASRC2      = 0x3A0;
 DMADST2      = 0x3A2;
_DMADST2      = 0x3A2;
 DMACNT2      = 0x3A4;
_DMACNT2      = 0x3A4;
 DMACH3       = 0x3A6;
_DMACH3       = 0x3A6;
_DMACH3bits   = 0x3A6;
 DMAINT3      = 0x3A8;
_DMAINT3      = 0x3A8;
_DMAINT3bits  = 0x3A8;
 DMASRC3      = 0x3AA;
_DMASRC3      = 0x3AA;
 DMADST3      = 0x3AC;
_DMADST3      = 0x3AC;
 DMACNT3      = 0x3AE;
_DMACNT3      = 0x3AE;
 DMACH4       = 0x3B0;
_DMACH4       = 0x3B0;
_DMACH4bits   = 0x3B0;
 DMAINT4      = 0x3B2;
_DMAINT4      = 0x3B2;
_DMAINT4bits  = 0x3B2;
 DMASRC4      = 0x3B4;
_DMASRC4      = 0x3B4;
 DMADST4      = 0x3B6;
_DMADST4      = 0x3B6;
 DMACNT4      = 0x3B8;
_DMACNT4      = 0x3B8;
 DMACH5       = 0x3BA;
_DMACH5       = 0x3BA;
_DMACH5bits   = 0x3BA;
 DMAINT5      = 0x3BC;
_DMAINT5      = 0x3BC;
_DMAINT5bits  = 0x3BC;
 DMASRC5      = 0x3BE;
_DMASRC5      = 0x3BE;
 DMADST5      = 0x3C0;
_DMADST5      = 0x3C0;
 DMACNT5      = 0x3C2;
_DMACNT5      = 0x3C2;
 ANCFG        = 0x4DE;
_ANCFG        = 0x4DE;
_ANCFGbits    = 0x4DE;
 ANSA         = 0x4E0;
_ANSA         = 0x4E0;
_ANSAbits     = 0x4E0;
 ANSB         = 0x4E2;
_ANSB         = 0x4E2;
_ANSBbits     = 0x4E2;
 ANSC         = 0x4E4;
_ANSC         = 0x4E4;
_ANSCbits     = 0x4E4;
 ALRMVAL      = 0x620;
_ALRMVAL      = 0x620;
 ALCFGRPT     = 0x622;
_ALCFGRPT     = 0x622;
_ALCFGRPTbits = 0x622;
 RTCVAL       = 0x624;
_RTCVAL       = 0x624;
 RCFGCAL      = 0x626;
_RCFGCAL      = 0x626;
_RCFGCALbits  = 0x626;
 RTCPWC       = 0x628;
_RTCPWC       = 0x628;
_RTCPWCbits   = 0x628;
 CMSTAT       = 0x630;
_CMSTAT       = 0x630;
_CMSTATbits   = 0x630;
 CVRCON       = 0x632;
_CVRCON       = 0x632;
_CVRCONbits   = 0x632;
 CM1CON       = 0x634;
_CM1CON       = 0x634;
_CM1CONbits   = 0x634;
 CM2CON       = 0x636;
_CM2CON       = 0x636;
_CM2CONbits   = 0x636;
 CM3CON       = 0x638;
_CM3CON       = 0x638;
_CM3CONbits   = 0x638;
 CRCCON1      = 0x640;
_CRCCON1      = 0x640;
_CRCCON1bits  = 0x640;
 CRCCON2      = 0x642;
_CRCCON2      = 0x642;
_CRCCON2bits  = 0x642;
 CRCXORL      = 0x644;
_CRCXORL      = 0x644;
_CRCXORLbits  = 0x644;
 CRCXORH      = 0x646;
_CRCXORH      = 0x646;
_CRCXORHbits  = 0x646;
 CRCDAT       = 0x648;
_CRCDAT       = 0x648;
 CRCDATL      = 0x648;
_CRCDATL      = 0x648;
 CRCDATH      = 0x64A;
_CRCDATH      = 0x64A;
 CRCWDAT      = 0x64C;
_CRCWDAT      = 0x64C;
 CRCWDATL     = 0x64C;
_CRCWDATL     = 0x64C;
 CRCWDATH     = 0x64E;
_CRCWDATH     = 0x64E;
 RCON         = 0x740;
_RCON         = 0x740;
_RCONbits     = 0x740;
 OSCCON       = 0x742;
_OSCCON       = 0x742;
_OSCCONbits   = 0x742;
 OSCCONL      = 0x742;
_OSCCONL      = 0x742;
 OSCCONH      = 0x743;
_OSCCONH      = 0x743;
 CLKDIV       = 0x746;
_CLKDIV       = 0x746;
_CLKDIVbits   = 0x746;
 OSCTUN       = 0x748;
_OSCTUN       = 0x748;
_OSCTUNbits   = 0x748;
 REFOCONL     = 0x74C;
_REFOCONL     = 0x74C;
_REFOCONLbits = 0x74C;
 REFOCONH     = 0x74E;
_REFOCONH     = 0x74E;
_REFOCONHbits = 0x74E;
 REFOTRIML    = 0x750;
_REFOTRIML    = 0x750;
_REFOTRIMLbits = 0x750;
 REFOTRIMH    = 0x752;
_REFOTRIMH    = 0x752;
 HLVDCON      = 0x756;
_HLVDCON      = 0x756;
_HLVDCONbits  = 0x756;
 NVMCON       = 0x760;
_NVMCON       = 0x760;
_NVMCONbits   = 0x760;
 NVMKEY       = 0x766;
_NVMKEY       = 0x766;
 PMD1         = 0x770;
_PMD1         = 0x770;
_PMD1bits     = 0x770;
 PMD2         = 0x772;
_PMD2         = 0x772;
_PMD2bits     = 0x772;
 PMD3         = 0x774;
_PMD3         = 0x774;
_PMD3bits     = 0x774;
 PMD4         = 0x776;
_PMD4         = 0x776;
_PMD4bits     = 0x776;
 PMD7         = 0x77C;
_PMD7         = 0x77C;
_PMD7bits     = 0x77C;
 PMD8         = 0x77E;
_PMD8         = 0x77E;
_PMD8bits     = 0x77E;
/*
** ======= Base Addresses for Various Peripherals and ACC ======
*/

 UART1        = 0x214;
_UART1        = 0x214;
 UART2        = 0x22A;
_UART2        = 0x22A;
